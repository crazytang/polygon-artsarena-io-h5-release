var _=Object.defineProperty;var k=(a,t,e)=>t in a?_(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var s=(a,t,e)=>(k(a,typeof t!="symbol"?t+"":t,e),e);import{al as u,am as i,a2 as g,$ as h}from"./index-1e3b5e9c.js";class w{constructor(t){s(this,"nftAddress");s(this,"nftTokenId");s(this,"owner");s(this,"stakedInPool");s(this,"ownerInPool");s(this,"stakeStatus");this.nftAddress=t.nftAddress,this.nftTokenId=t.nftTokenId,this.owner=t.owner,this.stakedInPool=t.stakedInPool,this.ownerInPool=t.ownerInPool,this.stakeStatus=t.stakeStatus}}class p{constructor(t){s(this,"chain_id");s(this,"nft_address");s(this,"pool_address");s(this,"redeemed_at");s(this,"stake_status");s(this,"staked_at");s(this,"token_id");s(this,"user_address");this.chain_id=t.chain_id,this.nft_address=t.nft_address,this.pool_address=t.pool_address,this.redeemed_at=t.redeemed_at,this.stake_status=t.stake_status,this.staked_at=t.staked_at,this.token_id=t.token_id,this.user_address=t.user_address}}class m extends u{async getRedeemNFTSignature(t,e,o,n){const r=this.gateway+"/contract/sign/redeem",d={msgSender:t,nftAddress:e,tokenId:o,nonce:n},c=await i.post(r,d);return this.checkResponse(c),c.data.data.signature}async getWithdrawSignature(t,e,o){const n=this.gateway+"/contract/sign/withdraw",r={msgSender:t,amount:g(e,18).toString(),nonce:o},d=await i.post(n,r);return this.checkResponse(d),d.data.data.signature}async getNFTStatus(t,e){const o=h(),n=this.gateway+"/contract/nft_status/"+o+"/"+t+"/"+e,r=await i.get(n);return this.checkResponse(r),new w(r.data.data)}async getUserStakedNFTs(t){const e=h(),o=this.gateway+"/contract/user_staked/"+e+"/"+t,n=await i.get(o);return this.checkResponse(n),n.data.data.map(d=>new p(d))}}export{m as C};
