import{an as I,a_ as T,bf as x,b1 as S,ag as _,ad as P,aj as C,aa as k,au as $,av as B,aH as a,b5 as n,a4 as D,ah as d,be as F,aY as H,at as U,$ as A,a1 as E,a3 as v}from"./index-1e3b5e9c.js";import{T as m}from"./publicUnit-82a6e2b0.js";import{W as M}from"./webutlis-api-service-ba71ffac.js";import{M as w}from"./bignumber-c053b17e.js";import{E as O}from"./erc721-service-bd0ec81e.js";import{C as j}from"./contract-data-service-bee1e717.js";import{T as g}from"./transaction-api-service-8b388dbb.js";const R={class:"title"},V={class:"nft_info"},W={class:"nft_info_left"},K={class:"nft_info_ns"},L={class:"nft_info_n_t"},Y={class:"nft_info_s"},q={class:"nft_info_right"},z={class:"nft_info_price"},G={class:"nft_info_matic"},J={class:"nft_info_u"},Q=I({__name:"index",props:{nftInfo:{type:Object,default:()=>{}},price:{type:String,default:""},status:{type:String,default:""}},setup(y){const{t:e}=T(),t=y,i=new M,[f]=[x(),S()],c=_(""),o=_(),r=_(0);P(async()=>{f.path=="/account/listing"?c.value=e("views.fixedPrice.t5")+"NFT":f.path=="/account/sales"?c.value=e("views.fixedPrice.t6")+"NFT":c.value=e("views.fixedPrice.t7")+"NFT",await b(m),r.value=w(t==null?void 0:t.price,o.value.price)}),C(()=>t.price,async s=>{r.value=k(()=>s?w(s,o.value.price):0)});const b=async s=>{o.value=await i.getAssetPrice(s+"USDT")};return(s,X)=>{var l,u,p,h;return $(),B(H,null,[a("div",R,n(c.value),1),a("div",V,[a("div",W,[D(d(F),{src:(l=s.$props.nftInfo)==null?void 0:l.cacheImageUrl,width:60},null,8,["src"]),a("div",K,[a("div",L,n((u=s.$props.nftInfo)==null?void 0:u.metaName),1),a("div",Y,n((p=s.$props.nftInfo)==null?void 0:p.name),1)])]),a("div",q,[a("div",z,n(d(e)("views.fixedPrice.t4")),1),a("div",G,n(((h=s.$props)==null?void 0:h.price)||"--")+" "+n(d(m)),1),a("div",J,"$ "+n(r.value),1)])])],64)}}});const ce=U(Q,[["__scopeId","data-v-49e691ba"]]);class N extends O{constructor(e,t,i){super(e,i,t)}static async connect(){const e=A(),t=await j.getNFTMarketData(e);return new N(t.contract_address,t.abi,e)}async nonces(e){return E(await this.contract.nonces(e))}async cancelled_or_filled(e){return await this.contract.cancelled_or_filled(e)}async execute(e,t){await this.checkNetwork();const{hash:i}=await v({...this.getConfig(),functionName:"execute",args:[e,t],value:BigInt(e.order.price)});return await new g().pushTxHash(i,this.chainId),i}async cancelOrder(e){await this.checkNetwork();const{hash:t}=await v({...this.getConfig(),functionName:"cancelOrder",args:[e]});return await new g().pushTxHash(t,this.chainId),t}}export{ce as H,N};
