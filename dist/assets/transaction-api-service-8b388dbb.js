var Vn=Object.defineProperty;var $n=(n,e,t)=>e in n?Vn(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var C=(n,e,t)=>($n(n,typeof e!="symbol"?e+"":e,t),t);import{bE as K,eU as He,bH as se,bI as oe,eV as pt,eW as qn,eX as Wn,eY as Yn,eZ as k,e_ as Fe,e$ as ct,f0 as Zn,f1 as Kn,f2 as Zt,f3 as yt,f4 as Jn,f5 as z,f6 as Xn,f7 as Qn,f8 as ea,f9 as ta,fa as na,bs as aa,aM as ra,fb as ia,fc as sa,fd as oa,fe as ua,ff as la,fg as pa,fh as ca,fi as ya,dW as g,dY as te,ei as Ge,ej as dt,e0 as ze,dx as w,fj as mt,fk as V,fl as ft,fm as ne,e2 as W,dB as Kt,dE as _e,dw as j,dF as Jt,e9 as Xt,ek as Re,fn as ht,dA as Qt,fo as $,fp as Z,fq as ke,fr as bt,fs as Tt,ft as en,fu as ut,fv as tn,fw as nn,fx as an,fy as da,fz as ma,fA as fa,fB as ha,e7 as ba,dZ as Ta,e8 as ga,e4 as wa,d_ as _a,dX as va,e3 as Pa,e5 as Ea,ew as ka,ef as La,ea as Aa,fC as Ia,dI as xa,dK as Ba,dL as Sa,dP as Da,fD as Ca,dM as Ra,eh as Ma,fE as Na,eg as Fa,eb as Oa,fF as Ua,d$ as Ha,dQ as Ga,fG as za,fH as ja,fI as Va,fJ as $a,e1 as qa,fK as Wa,dy as Ya,dS as Za,fL as Ka,fM as Ja,dT as Xa,em as Qa,a6 as er,dU as tr,fN as nr,en as ar,fO as rr,ec as ir,el as sr,ed as or,ee as ur,fP as lr,fQ as pr,dD as cr,dH as yr,dG as dr,eo as mr,fR as rn,ep as fr,eA as Y,fS as Lt,fT as hr,fU as br,b2 as Tr,fV as gr,al as wr,am as At}from"./index-1e3b5e9c.js";import{I as lt,a as sn,s as on,H as _r,L as vr,T as Pr,l as Er,c as kr,d as Lr,e as Ar,f as Ir,b as xr,g as Br,h as Sr,i as Dr,j as Cr,k as Rr,m as Mr,n as Nr,o as Fr,p as Or,q as Ur,r as Hr,t as Gr,v as zr,w as jr,x as Vr,y as $r,z as qr,F as un,W as ln,A as pn,B as cn,C as Wr,u as Yr,D as Zr}from"./utils-518c8eb5.js";class It extends K{constructor({offset:e}){super(`Offset \`${e}\` cannot be negative.`),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"NegativeOffsetError"})}}class Kr extends K{constructor({length:e,position:t}){super(`Position \`${t}\` is out of bounds (\`0 < position < ${e}\`).`),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"PositionOutOfBoundsError"})}}const Jr={bytes:new Uint8Array,dataView:new DataView(new ArrayBuffer(0)),position:0,assertPosition(n){if(n<0||n>this.bytes.length-1)throw new Kr({length:this.bytes.length,position:n})},decrementPosition(n){if(n<0)throw new It({offset:n});const e=this.position-n;this.assertPosition(e),this.position=e},incrementPosition(n){if(n<0)throw new It({offset:n});const e=this.position+n;this.assertPosition(e),this.position=e},inspectByte(n){const e=n??this.position;return this.assertPosition(e),this.bytes[e]},inspectBytes(n,e){const t=e??this.position;return this.assertPosition(t+n-1),this.bytes.subarray(t,t+n)},inspectUint8(n){const e=n??this.position;return this.assertPosition(e),this.bytes[e]},inspectUint16(n){const e=n??this.position;return this.assertPosition(e+1),this.dataView.getUint16(e)},inspectUint24(n){const e=n??this.position;return this.assertPosition(e+2),(this.dataView.getUint16(e)<<8)+this.dataView.getUint8(e+2)},inspectUint32(n){const e=n??this.position;return this.assertPosition(e+3),this.dataView.getUint32(e)},pushByte(n){this.assertPosition(this.position),this.bytes[this.position]=n,this.position++},pushBytes(n){this.assertPosition(this.position+n.length-1),this.bytes.set(n,this.position),this.position+=n.length},pushUint8(n){this.assertPosition(this.position),this.bytes[this.position]=n,this.position++},pushUint16(n){this.assertPosition(this.position+1),this.dataView.setUint16(this.position,n),this.position+=2},pushUint24(n){this.assertPosition(this.position+2),this.dataView.setUint16(this.position,n>>8),this.dataView.setUint8(this.position+2,n&255),this.position+=3},pushUint32(n){this.assertPosition(this.position+3),this.dataView.setUint32(this.position,n),this.position+=4},readByte(){const n=this.inspectByte();return this.position++,n},readBytes(n){const e=this.inspectBytes(n);return this.position+=n,e},readUint8(){const n=this.inspectUint8();return this.position+=1,n},readUint16(){const n=this.inspectUint16();return this.position+=2,n},readUint24(){const n=this.inspectUint24();return this.position+=3,n},readUint32(){const n=this.inspectUint32();return this.position+=4,n},setPosition(n){this.assertPosition(n),this.position=n}};function Xr(n){const e=Object.create(Jr);return e.bytes=n,e.dataView=new DataView(n.buffer,n.byteOffset,n.byteLength),e}function Qr(n){const{chainId:e,maxPriorityFeePerGas:t,gasPrice:a,maxFeePerGas:r,to:o}=n;if(e<=0)throw new He({chainId:e});if(o&&!se(o))throw new oe({address:o});if(a)throw new K("`gasPrice` is not a valid EIP-1559 Transaction attribute.");if(r&&r>2n**256n-1n)throw new pt({maxFeePerGas:r});if(t&&r&&t>r)throw new qn({maxFeePerGas:r,maxPriorityFeePerGas:t})}function ei(n){const{chainId:e,maxPriorityFeePerGas:t,gasPrice:a,maxFeePerGas:r,to:o}=n;if(e<=0)throw new He({chainId:e});if(o&&!se(o))throw new oe({address:o});if(t||r)throw new K("`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.");if(a&&a>2n**256n-1n)throw new pt({maxFeePerGas:a})}function ti(n){const{chainId:e,maxPriorityFeePerGas:t,gasPrice:a,maxFeePerGas:r,to:o,accessList:i}=n;if(o&&!se(o))throw new oe({address:o});if(typeof e<"u"&&e<=0)throw new He({chainId:e});if(t||r)throw new K("`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.");if(a&&a>2n**256n-1n)throw new pt({maxFeePerGas:a});if(i)throw new K("`accessList` is not a valid Legacy Transaction attribute.")}function yn(n){if(!n||n.length===0)return[];const e=[];for(let t=0;t<n.length;t++){const{address:a,storageKeys:r}=n[t];for(let o=0;o<r.length;o++)if(r[o].length-2!==64)throw new Wn({storageKey:r[o]});if(!se(a))throw new oe({address:a});e.push([a,r])}return e}function ni(n,e){const t=Yn(n);return t==="eip1559"?ai(n,e):t==="eip2930"?ri(n,e):ii(n,e)}function ai(n,e){const{chainId:t,gas:a,nonce:r,to:o,value:i,maxFeePerGas:p,maxPriorityFeePerGas:u,accessList:s,data:l}=n;Qr(n);const c=yn(s),m=[k(t),r?k(r):"0x",u?k(u):"0x",p?k(p):"0x",a?k(a):"0x",o??"0x",i?k(i):"0x",l??"0x",c];if(e){const y=(()=>e.v===0n?"0x":e.v===1n?k(1):e.v===27n?"0x":k(1))();m.push(y,Fe(e.r),Fe(e.s))}return ct(["0x02",je(m)])}function ri(n,e){const{chainId:t,gas:a,data:r,nonce:o,to:i,value:p,accessList:u,gasPrice:s}=n;ei(n);const l=yn(u),c=[k(t),o?k(o):"0x",s?k(s):"0x",a?k(a):"0x",i??"0x",p?k(p):"0x",r??"0x",l];if(e){const m=(()=>e.v===0n?"0x":e.v===1n?k(1):e.v===27n?"0x":k(1))();c.push(m,Fe(e.r),Fe(e.s))}return ct(["0x01",je(c)])}function ii(n,e){const{chainId:t=0,gas:a,data:r,nonce:o,to:i,value:p,gasPrice:u}=n;ti(n);let s=[o?k(o):"0x",u?k(u):"0x",a?k(a):"0x",i??"0x",p?k(p):"0x",r??"0x"];if(e){const l=(()=>{if(t>0)return BigInt(t*2)+BigInt(35n+e.v-27n);if(e.v>=35n)return(e.v-35n)/2n>0?e.v:27n+(e.v===35n?0n:1n);const c=27n+(e.v===27n?0n:1n);if(e.v!==c)throw new Zn({v:e.v});return c})();s=[...s,k(l),e.r,e.s]}else t>0&&(s=[...s,k(t),"0x","0x"]);return je(s)}function je(n,e="hex"){const t=dn(n),a=Xr(new Uint8Array(t.length));return t.encode(a),e==="hex"?Kn(a.bytes):a.bytes}function dn(n){return Array.isArray(n)?si(n.map(e=>dn(e))):oi(n)}function si(n){const e=n.reduce((r,o)=>r+o.length,0),t=mn(e);return{length:(()=>e<=55?1+e:1+t+e)(),encode(r){e<=55?r.pushByte(192+e):(r.pushByte(192+55+t),t===1?r.pushUint8(e):t===2?r.pushUint16(e):t===3?r.pushUint24(e):r.pushUint32(e));for(const{encode:o}of n)o(r)}}}function oi(n){const e=typeof n=="string"?Zt(n):n,t=mn(e.length);return{length:(()=>e.length===1&&e[0]<128?1:e.length<=55?1+e.length:1+t+e.length)(),encode(r){e.length===1&&e[0]<128?r.pushBytes(e):e.length<=55?(r.pushByte(128+e.length),r.pushBytes(e)):(r.pushByte(128+55+t),t===1?r.pushUint8(e.length):t===2?r.pushUint16(e.length):t===3?r.pushUint24(e.length):r.pushUint32(e.length),r.pushBytes(e))}}}function mn(n){if(n<2**8)return 1;if(n<2**16)return 2;if(n<2**24)return 3;if(n<2**32)return 4;throw new K("Length is too large.")}const ui=yt({id:137,name:"Polygon",network:"matic",nativeCurrency:{name:"MATIC",symbol:"MATIC",decimals:18},rpcUrls:{alchemy:{http:["https://polygon-mainnet.g.alchemy.com/v2"],webSocket:["wss://polygon-mainnet.g.alchemy.com/v2"]},infura:{http:["https://polygon-mainnet.infura.io/v3"],webSocket:["wss://polygon-mainnet.infura.io/ws/v3"]},default:{http:["https://polygon-rpc.com"]},public:{http:["https://polygon-rpc.com"]}},blockExplorers:{etherscan:{name:"PolygonScan",url:"https://polygonscan.com"},default:{name:"PolygonScan",url:"https://polygonscan.com"}},contracts:{multicall3:{address:"0xca11bde05977b3631167028862be2a173976ca11",blockCreated:25770160}}}),gt={block:Jn({format(n){var t;const e=(t=n.transactions)==null?void 0:t.map(a=>{if(typeof a=="string")return a;const r=gt.transaction.format(a);return r.typeHex==="0x71"?r.type="eip712":r.typeHex==="0xff"&&(r.type="priority"),r});return{l1BatchNumber:n.l1BatchNumber?z(n.l1BatchNumber):null,l1BatchTimestamp:n.l1BatchTimestamp?z(n.l1BatchTimestamp):null,transactions:e}}}),transaction:Xn({format(n){const e={};return n.type==="0x71"?e.type="eip712":n.type==="0xff"&&(e.type="priority"),{...e,l1BatchNumber:n.l1BatchNumber?z(n.l1BatchNumber):null,l1BatchTxIndex:n.l1BatchTxIndex?z(n.l1BatchTxIndex):null}}}),transactionReceipt:Qn({format(n){return{l1BatchNumber:n.l1BatchNumber?z(n.l1BatchNumber):null,l1BatchTxIndex:n.l1BatchTxIndex?z(n.l1BatchTxIndex):null,logs:n.logs.map(e=>({...ea(e),l1BatchNumber:e.l1BatchNumber?z(e.l1BatchNumber):null,transactionLogIndex:ta(e.transactionLogIndex),logType:e.logType})),l2ToL1Logs:n.l2ToL1Logs.map(e=>({blockNumber:z(e.blockHash),blockHash:e.blockHash,l1BatchNumber:z(e.l1BatchNumber),transactionIndex:z(e.transactionIndex),shardId:z(e.shardId),isService:e.isService,sender:e.sender,key:e.key,value:e.value,transactionHash:e.transactionHash,logIndex:z(e.logIndex)}))}}}),transactionRequest:na({exclude:["customSignature","factoryDeps","gasPerPubdata","paymaster","paymasterInput"],format(n){return n.gasPerPubdata||n.paymaster&&n.paymasterInput||n.factoryDeps||n.customSignature?{eip712Meta:{...n.gasPerPubdata?{gasPerPubdata:k(n.gasPerPubdata)}:{},...n.paymaster&&n.paymasterInput?{paymasterParams:{paymaster:n.paymaster,paymasterInput:Array.from(Zt(n.paymasterInput))}}:{},...n.factoryDeps?{factoryDeps:n.factoryDeps}:{},...n.customSignature?{customSignature:n.customSignature}:{}},type:n.type==="eip712"?"0x71":"0xff"}:{}}})},li=(n,e)=>ci(n)?pi(n):ni(n,e),fn={transaction:li};function pi(n){const{chainId:e,gas:t,nonce:a,to:r,from:o,value:i,maxFeePerGas:p,maxPriorityFeePerGas:u,customSignature:s,factoryDeps:l,paymaster:c,paymasterInput:m,gasPerPubdata:y,data:b}=n;yi(n);const P=[a?k(a):"0x",u?k(u):"0x",p?k(p):"0x",t?k(t):"0x",r??"0x",i?k(i):"0x",b??"0x",k(e),k(""),k(""),k(e),o??"0x",y?k(y):"0x",l??[],s??"0x",c&&m?[c,m]:[]];return ct(["0x71",je(P)])}function ci(n){return"customSignature"in n||"paymaster"in n||"paymasterInput"in n||"gasPerPubdata"in n||"factoryDeps"in n}function yi(n){const{chainId:e,to:t,from:a,paymaster:r,paymasterInput:o}=n;if(e<=0)throw new He({chainId:e});if(t&&!se(t))throw new oe({address:t});if(a&&!se(a))throw new oe({address:a});if(r&&!se(r))throw new oe({address:r});if(r&&!o)throw new K("`paymasterInput` must be provided when `paymaster` is defined");if(!r&&o)throw new K("`paymaster` must be provided when `paymasterInput` is defined")}const di=yt({id:324,name:"zkSync Era",network:"zksync-era",nativeCurrency:{decimals:18,name:"Ether",symbol:"ETH"},rpcUrls:{default:{http:["https://mainnet.era.zksync.io"],webSocket:["wss://mainnet.era.zksync.io/ws"]},public:{http:["https://mainnet.era.zksync.io"],webSocket:["wss://mainnet.era.zksync.io/ws"]}},blockExplorers:{default:{name:"zkExplorer",url:"https://explorer.zksync.io"}},contracts:{multicall3:{address:"0xF9cda624FBC7e059355ce98a31693d299FACd963"}}},{serializers:fn,formatters:gt}),mi=yt({id:280,name:"zkSync Era Testnet",network:"zksync-era-testnet",nativeCurrency:{name:"Ether",symbol:"ETH",decimals:18},rpcUrls:{default:{http:["https://testnet.era.zksync.dev"],webSocket:["wss://testnet.era.zksync.dev/ws"]},public:{http:["https://testnet.era.zksync.dev"],webSocket:["wss://testnet.era.zksync.dev/ws"]}},blockExplorers:{default:{name:"zkExplorer",url:"https://goerli.explorer.zksync.io"}},contracts:{multicall3:{address:"0xF9cda624FBC7e059355ce98a31693d299FACd963"}},testnet:!0},{serializers:fn,formatters:gt}),fi="Ξ",hn=Object.freeze(Object.defineProperty({__proto__:null,AddressZero:aa,EtherSymbol:fi,HashZero:ra,MaxInt256:ia,MaxUint256:sa,MinInt256:oa,NegativeOne:ua,One:la,Two:pa,WeiPerEther:ca,Zero:ya},Symbol.toStringTag,{value:"Module"})),hi="contracts/5.7.0";var ae=globalThis&&globalThis.__awaiter||function(n,e,t,a){function r(o){return o instanceof t?o:new t(function(i){i(o)})}return new(t||(t=Promise))(function(o,i){function p(l){try{s(a.next(l))}catch(c){i(c)}}function u(l){try{s(a.throw(l))}catch(c){i(c)}}function s(l){l.done?o(l.value):r(l.value).then(p,u)}s((a=a.apply(n,e||[])).next())})};const S=new w(hi),bi={chainId:!0,data:!0,from:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,value:!0,type:!0,accessList:!0,maxFeePerGas:!0,maxPriorityFeePerGas:!0,customData:!0,ccipReadEnabled:!0};function Oe(n,e){return ae(this,void 0,void 0,function*(){const t=yield e;typeof t!="string"&&S.throwArgumentError("invalid address or ENS name","name",t);try{return ze(t)}catch{}n||S.throwError("a provider or signer is needed to resolve ENS names",w.errors.UNSUPPORTED_OPERATION,{operation:"resolveName"});const a=yield n.resolveName(t);return a==null&&S.throwArgumentError("resolver or addr is not configured for ENS name","name",t),a})}function ge(n,e,t){return ae(this,void 0,void 0,function*(){return Array.isArray(t)?yield Promise.all(t.map((a,r)=>ge(n,Array.isArray(e)?e[r]:e[a.name],a))):t.type==="address"?yield Oe(n,e):t.type==="tuple"?yield ge(n,e,t.components):t.baseType==="array"?Array.isArray(e)?yield Promise.all(e.map(a=>ge(n,a,t.arrayChildren))):Promise.reject(S.makeError("invalid value for array",w.errors.INVALID_ARGUMENT,{argument:"value",value:e})):e})}function Ve(n,e,t){return ae(this,void 0,void 0,function*(){let a={};t.length===e.inputs.length+1&&typeof t[t.length-1]=="object"&&(a=V(t.pop())),S.checkArgumentCount(t.length,e.inputs.length,"passed to contract"),n.signer?a.from?a.from=Re({override:Oe(n.signer,a.from),signer:n.signer.getAddress()}).then(s=>ae(this,void 0,void 0,function*(){return ze(s.signer)!==s.override&&S.throwError("Contract with a Signer cannot override from",w.errors.UNSUPPORTED_OPERATION,{operation:"overrides.from"}),s.override})):a.from=n.signer.getAddress():a.from&&(a.from=Oe(n.provider,a.from));const r=yield Re({args:ge(n.signer||n.provider,t,e.inputs),address:n.resolvedAddress,overrides:Re(a)||{}}),o=n.interface.encodeFunctionData(e,r.args),i={data:o,to:r.address},p=r.overrides;if(p.nonce!=null&&(i.nonce=j.from(p.nonce).toNumber()),p.gasLimit!=null&&(i.gasLimit=j.from(p.gasLimit)),p.gasPrice!=null&&(i.gasPrice=j.from(p.gasPrice)),p.maxFeePerGas!=null&&(i.maxFeePerGas=j.from(p.maxFeePerGas)),p.maxPriorityFeePerGas!=null&&(i.maxPriorityFeePerGas=j.from(p.maxPriorityFeePerGas)),p.from!=null&&(i.from=p.from),p.type!=null&&(i.type=p.type),p.accessList!=null&&(i.accessList=ht(p.accessList)),i.gasLimit==null&&e.gas!=null){let s=21e3;const l=Qt(o);for(let c=0;c<l.length;c++)s+=4,l[c]&&(s+=64);i.gasLimit=j.from(e.gas).add(s)}if(p.value){const s=j.from(p.value);!s.isZero()&&!e.payable&&S.throwError("non-payable method cannot override value",w.errors.UNSUPPORTED_OPERATION,{operation:"overrides.value",value:a.value}),i.value=s}p.customData&&(i.customData=V(p.customData)),p.ccipReadEnabled&&(i.ccipReadEnabled=!!p.ccipReadEnabled),delete a.nonce,delete a.gasLimit,delete a.gasPrice,delete a.from,delete a.value,delete a.type,delete a.accessList,delete a.maxFeePerGas,delete a.maxPriorityFeePerGas,delete a.customData,delete a.ccipReadEnabled;const u=Object.keys(a).filter(s=>a[s]!=null);return u.length&&S.throwError(`cannot override ${u.map(s=>JSON.stringify(s)).join(",")}`,w.errors.UNSUPPORTED_OPERATION,{operation:"overrides",overrides:u}),i})}function Ti(n,e){return function(...t){return Ve(n,e,t)}}function gi(n,e){const t=n.signer||n.provider;return function(...a){return ae(this,void 0,void 0,function*(){t||S.throwError("estimate require a provider or signer",w.errors.UNSUPPORTED_OPERATION,{operation:"estimateGas"});const r=yield Ve(n,e,a);return yield t.estimateGas(r)})}}function bn(n,e){const t=e.wait.bind(e);e.wait=a=>t(a).then(r=>(r.events=r.logs.map(o=>{let i=ne(o),p=null;try{p=n.interface.parseLog(o)}catch{}return p&&(i.args=p.args,i.decode=(u,s)=>n.interface.decodeEventLog(p.eventFragment,u,s),i.event=p.name,i.eventSignature=p.signature),i.removeListener=()=>n.provider,i.getBlock=()=>n.provider.getBlock(r.blockHash),i.getTransaction=()=>n.provider.getTransaction(r.transactionHash),i.getTransactionReceipt=()=>Promise.resolve(r),i}),r))}function Tn(n,e,t){const a=n.signer||n.provider;return function(...r){return ae(this,void 0,void 0,function*(){let o;if(r.length===e.inputs.length+1&&typeof r[r.length-1]=="object"){const u=V(r.pop());u.blockTag!=null&&(o=yield u.blockTag),delete u.blockTag,r.push(u)}n.deployTransaction!=null&&(yield n._deployed(o));const i=yield Ve(n,e,r),p=yield a.call(i,o);try{let u=n.interface.decodeFunctionResult(e,p);return t&&e.outputs.length===1&&(u=u[0]),u}catch(u){throw u.code===w.errors.CALL_EXCEPTION&&(u.address=n.address,u.args=r,u.transaction=i),u}})}}function wi(n,e){return function(...t){return ae(this,void 0,void 0,function*(){n.signer||S.throwError("sending a transaction requires a signer",w.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction"}),n.deployTransaction!=null&&(yield n._deployed());const a=yield Ve(n,e,t),r=yield n.signer.sendTransaction(a);return bn(n,r),r})}}function xt(n,e,t){return e.constant?Tn(n,e,t):wi(n,e)}function gn(n){return n.address&&(n.topics==null||n.topics.length===0)?"*":(n.address||"*")+"@"+(n.topics?n.topics.map(e=>Array.isArray(e)?e.join("|"):e).join(":"):"")}class ve{constructor(e,t){g(this,"tag",e),g(this,"filter",t),this._listeners=[]}addListener(e,t){this._listeners.push({listener:e,once:t})}removeListener(e){let t=!1;this._listeners=this._listeners.filter(a=>t||a.listener!==e?!0:(t=!0,!1))}removeAllListeners(){this._listeners=[]}listeners(){return this._listeners.map(e=>e.listener)}listenerCount(){return this._listeners.length}run(e){const t=this.listenerCount();return this._listeners=this._listeners.filter(a=>{const r=e.slice();return setTimeout(()=>{a.listener.apply(this,r)},0),!a.once}),t}prepareEvent(e){}getEmit(e){return[e]}}class _i extends ve{constructor(){super("error",null)}}class Bt extends ve{constructor(e,t,a,r){const o={address:e};let i=t.getEventTopic(a);r?(i!==r[0]&&S.throwArgumentError("topic mismatch","topics",r),o.topics=r.slice()):o.topics=[i],super(gn(o),o),g(this,"address",e),g(this,"interface",t),g(this,"fragment",a)}prepareEvent(e){super.prepareEvent(e),e.event=this.fragment.name,e.eventSignature=this.fragment.format(),e.decode=(t,a)=>this.interface.decodeEventLog(this.fragment,t,a);try{e.args=this.interface.decodeEventLog(this.fragment,e.data,e.topics)}catch(t){e.args=null,e.decodeError=t}}getEmit(e){const t=Xt(e.args);if(t.length)throw t[0].error;const a=(e.args||[]).slice();return a.push(e),a}}class St extends ve{constructor(e,t){super("*",{address:e}),g(this,"address",e),g(this,"interface",t)}prepareEvent(e){super.prepareEvent(e);try{const t=this.interface.parseLog(e);e.event=t.name,e.eventSignature=t.signature,e.decode=(a,r)=>this.interface.decodeEventLog(t.eventFragment,a,r),e.args=t.args}catch{}}}class wt{constructor(e,t,a){g(this,"interface",te(new.target,"getInterface")(t)),a==null?(g(this,"provider",null),g(this,"signer",null)):Ge.isSigner(a)?(g(this,"provider",a.provider||null),g(this,"signer",a)):dt.isProvider(a)?(g(this,"provider",a),g(this,"signer",null)):S.throwArgumentError("invalid signer or provider","signerOrProvider",a),g(this,"callStatic",{}),g(this,"estimateGas",{}),g(this,"functions",{}),g(this,"populateTransaction",{}),g(this,"filters",{});{const i={};Object.keys(this.interface.events).forEach(p=>{const u=this.interface.events[p];g(this.filters,p,(...s)=>({address:this.address,topics:this.interface.encodeFilterTopics(u,s)})),i[u.name]||(i[u.name]=[]),i[u.name].push(p)}),Object.keys(i).forEach(p=>{const u=i[p];u.length===1?g(this.filters,p,this.filters[u[0]]):S.warn(`Duplicate definition of ${p} (${u.join(", ")})`)})}if(g(this,"_runningEvents",{}),g(this,"_wrappedEmits",{}),e==null&&S.throwArgumentError("invalid contract address or ENS name","addressOrName",e),g(this,"address",e),this.provider)g(this,"resolvedAddress",Oe(this.provider,e));else try{g(this,"resolvedAddress",Promise.resolve(ze(e)))}catch{S.throwError("provider is required to use ENS name as contract address",w.errors.UNSUPPORTED_OPERATION,{operation:"new Contract"})}this.resolvedAddress.catch(i=>{});const r={},o={};Object.keys(this.interface.functions).forEach(i=>{const p=this.interface.functions[i];if(o[i]){S.warn(`Duplicate ABI entry for ${JSON.stringify(i)}`);return}o[i]=!0;{const u=p.name;r[`%${u}`]||(r[`%${u}`]=[]),r[`%${u}`].push(i)}this[i]==null&&g(this,i,xt(this,p,!0)),this.functions[i]==null&&g(this.functions,i,xt(this,p,!1)),this.callStatic[i]==null&&g(this.callStatic,i,Tn(this,p,!0)),this.populateTransaction[i]==null&&g(this.populateTransaction,i,Ti(this,p)),this.estimateGas[i]==null&&g(this.estimateGas,i,gi(this,p))}),Object.keys(r).forEach(i=>{const p=r[i];if(p.length>1)return;i=i.substring(1);const u=p[0];try{this[i]==null&&g(this,i,this[u])}catch{}this.functions[i]==null&&g(this.functions,i,this.functions[u]),this.callStatic[i]==null&&g(this.callStatic,i,this.callStatic[u]),this.populateTransaction[i]==null&&g(this.populateTransaction,i,this.populateTransaction[u]),this.estimateGas[i]==null&&g(this.estimateGas,i,this.estimateGas[u])})}static getContractAddress(e){return mt(e)}static getInterface(e){return lt.isInterface(e)?e:new lt(e)}deployed(){return this._deployed()}_deployed(e){return this._deployedPromise||(this.deployTransaction?this._deployedPromise=this.deployTransaction.wait().then(()=>this):this._deployedPromise=this.provider.getCode(this.address,e).then(t=>(t==="0x"&&S.throwError("contract not deployed",w.errors.UNSUPPORTED_OPERATION,{contractAddress:this.address,operation:"getDeployed"}),this))),this._deployedPromise}fallback(e){this.signer||S.throwError("sending a transactions require a signer",w.errors.UNSUPPORTED_OPERATION,{operation:"sendTransaction(fallback)"});const t=V(e||{});return["from","to"].forEach(function(a){t[a]!=null&&S.throwError("cannot override "+a,w.errors.UNSUPPORTED_OPERATION,{operation:a})}),t.to=this.resolvedAddress,this.deployed().then(()=>this.signer.sendTransaction(t))}connect(e){typeof e=="string"&&(e=new ft(e,this.provider));const t=new this.constructor(this.address,this.interface,e);return this.deployTransaction&&g(t,"deployTransaction",this.deployTransaction),t}attach(e){return new this.constructor(e,this.interface,this.signer||this.provider)}static isIndexed(e){return sn.isIndexed(e)}_normalizeRunningEvent(e){return this._runningEvents[e.tag]?this._runningEvents[e.tag]:e}_getRunningEvent(e){if(typeof e=="string"){if(e==="error")return this._normalizeRunningEvent(new _i);if(e==="event")return this._normalizeRunningEvent(new ve("event",null));if(e==="*")return this._normalizeRunningEvent(new St(this.address,this.interface));const t=this.interface.getEvent(e);return this._normalizeRunningEvent(new Bt(this.address,this.interface,t))}if(e.topics&&e.topics.length>0){try{const a=e.topics[0];if(typeof a!="string")throw new Error("invalid topic");const r=this.interface.getEvent(a);return this._normalizeRunningEvent(new Bt(this.address,this.interface,r,e.topics))}catch{}const t={address:this.address,topics:e.topics};return this._normalizeRunningEvent(new ve(gn(t),t))}return this._normalizeRunningEvent(new St(this.address,this.interface))}_checkRunningEvents(e){if(e.listenerCount()===0){delete this._runningEvents[e.tag];const t=this._wrappedEmits[e.tag];t&&e.filter&&(this.provider.off(e.filter,t),delete this._wrappedEmits[e.tag])}}_wrapEvent(e,t,a){const r=ne(t);return r.removeListener=()=>{a&&(e.removeListener(a),this._checkRunningEvents(e))},r.getBlock=()=>this.provider.getBlock(t.blockHash),r.getTransaction=()=>this.provider.getTransaction(t.transactionHash),r.getTransactionReceipt=()=>this.provider.getTransactionReceipt(t.transactionHash),e.prepareEvent(r),r}_addEventListener(e,t,a){if(this.provider||S.throwError("events require a provider or a signer with a provider",w.errors.UNSUPPORTED_OPERATION,{operation:"once"}),e.addListener(t,a),this._runningEvents[e.tag]=e,!this._wrappedEmits[e.tag]){const r=o=>{let i=this._wrapEvent(e,o,t);if(i.decodeError==null)try{const p=e.getEmit(i);this.emit(e.filter,...p)}catch(p){i.decodeError=p.error}e.filter!=null&&this.emit("event",i),i.decodeError!=null&&this.emit("error",i.decodeError,i)};this._wrappedEmits[e.tag]=r,e.filter!=null&&this.provider.on(e.filter,r)}}queryFilter(e,t,a){const r=this._getRunningEvent(e),o=V(r.filter);return typeof t=="string"&&W(t,32)?(a!=null&&S.throwArgumentError("cannot specify toBlock with blockhash","toBlock",a),o.blockHash=t):(o.fromBlock=t??0,o.toBlock=a??"latest"),this.provider.getLogs(o).then(i=>i.map(p=>this._wrapEvent(r,p,null)))}on(e,t){return this._addEventListener(this._getRunningEvent(e),t,!1),this}once(e,t){return this._addEventListener(this._getRunningEvent(e),t,!0),this}emit(e,...t){if(!this.provider)return!1;const a=this._getRunningEvent(e),r=a.run(t)>0;return this._checkRunningEvents(a),r}listenerCount(e){return this.provider?e==null?Object.keys(this._runningEvents).reduce((t,a)=>t+this._runningEvents[a].listenerCount(),0):this._getRunningEvent(e).listenerCount():0}listeners(e){if(!this.provider)return[];if(e==null){const t=[];for(let a in this._runningEvents)this._runningEvents[a].listeners().forEach(r=>{t.push(r)});return t}return this._getRunningEvent(e).listeners()}removeAllListeners(e){if(!this.provider)return this;if(e==null){for(const a in this._runningEvents){const r=this._runningEvents[a];r.removeAllListeners(),this._checkRunningEvents(r)}return this}const t=this._getRunningEvent(e);return t.removeAllListeners(),this._checkRunningEvents(t),this}off(e,t){if(!this.provider)return this;const a=this._getRunningEvent(e);return a.removeListener(t),this._checkRunningEvents(a),this}removeListener(e,t){return this.off(e,t)}}class Pe extends wt{}class wn{constructor(e,t,a){let r=null;typeof t=="string"?r=t:Kt(t)?r=_e(t):t&&typeof t.object=="string"?r=t.object:r="!",r.substring(0,2)!=="0x"&&(r="0x"+r),(!W(r)||r.length%2)&&S.throwArgumentError("invalid bytecode","bytecode",t),a&&!Ge.isSigner(a)&&S.throwArgumentError("invalid signer","signer",a),g(this,"bytecode",r),g(this,"interface",te(new.target,"getInterface")(e)),g(this,"signer",a||null)}getDeployTransaction(...e){let t={};if(e.length===this.interface.deploy.inputs.length+1&&typeof e[e.length-1]=="object"){t=V(e.pop());for(const a in t)if(!bi[a])throw new Error("unknown transaction override "+a)}return["data","from","to"].forEach(a=>{t[a]!=null&&S.throwError("cannot override "+a,w.errors.UNSUPPORTED_OPERATION,{operation:a})}),t.value&&!j.from(t.value).isZero()&&!this.interface.deploy.payable&&S.throwError("non-payable constructor cannot override value",w.errors.UNSUPPORTED_OPERATION,{operation:"overrides.value",value:t.value}),S.checkArgumentCount(e.length,this.interface.deploy.inputs.length," in Contract constructor"),t.data=_e(Jt([this.bytecode,this.interface.encodeDeploy(e)])),t}deploy(...e){return ae(this,void 0,void 0,function*(){let t={};e.length===this.interface.deploy.inputs.length+1&&(t=e.pop()),S.checkArgumentCount(e.length,this.interface.deploy.inputs.length," in Contract constructor");const a=yield ge(this.signer,e,this.interface.deploy.inputs);a.push(t);const r=this.getDeployTransaction(...a),o=yield this.signer.sendTransaction(r),i=te(this.constructor,"getContractAddress")(o),p=te(this.constructor,"getContract")(i,this.interface,this.signer);return bn(p,o),g(p,"deployTransaction",o),p})}attach(e){return this.constructor.getContract(e,this.interface,this.signer)}connect(e){return new this.constructor(this.interface,this.bytecode,e)}static fromSolidity(e,t){e==null&&S.throwError("missing compiler output",w.errors.MISSING_ARGUMENT,{argument:"compilerOutput"}),typeof e=="string"&&(e=JSON.parse(e));const a=e.abi;let r=null;return e.bytecode?r=e.bytecode:e.evm&&e.evm.bytecode&&(r=e.evm.bytecode),new this(a,r,t)}static getInterface(e){return Pe.getInterface(e)}static getContractAddress(e){return mt(e)}static getContract(e,t,a){return new Pe(e,t,a)}}let we=null;try{if(we=WebSocket,we==null)throw new Error("inject please")}catch{const e=new w($);we=function(){e.throwError("WebSockets not supported in this environment",w.errors.UNSUPPORTED_OPERATION,{operation:"new WebSocket()"})}}var at=globalThis&&globalThis.__awaiter||function(n,e,t,a){function r(o){return o instanceof t?o:new t(function(i){i(o)})}return new(t||(t=Promise))(function(o,i){function p(l){try{s(a.next(l))}catch(c){i(c)}}function u(l){try{s(a.throw(l))}catch(c){i(c)}}function s(l){l.done?o(l.value):r(l.value).then(p,u)}s((a=a.apply(n,e||[])).next())})};const Ie=new w($);let vi=1;class $e extends Z{constructor(e,t){t==="any"&&Ie.throwError("WebSocketProvider does not support 'any' network yet",w.errors.UNSUPPORTED_OPERATION,{operation:"network:any"}),typeof e=="string"?super(e,t):super("_websocket",t),this._pollingInterval=-1,this._wsReady=!1,typeof e=="string"?g(this,"_websocket",new we(this.connection.url)):g(this,"_websocket",e),g(this,"_requests",{}),g(this,"_subs",{}),g(this,"_subIds",{}),g(this,"_detectNetwork",super.detectNetwork()),this.websocket.onopen=()=>{this._wsReady=!0,Object.keys(this._requests).forEach(r=>{this.websocket.send(this._requests[r].payload)})},this.websocket.onmessage=r=>{const o=r.data,i=JSON.parse(o);if(i.id!=null){const p=String(i.id),u=this._requests[p];if(delete this._requests[p],i.result!==void 0)u.callback(null,i.result),this.emit("debug",{action:"response",request:JSON.parse(u.payload),response:i.result,provider:this});else{let s=null;i.error?(s=new Error(i.error.message||"unknown error"),g(s,"code",i.error.code||null),g(s,"response",o)):s=new Error("unknown error"),u.callback(s,void 0),this.emit("debug",{action:"response",error:s,request:JSON.parse(u.payload),provider:this})}}else if(i.method==="eth_subscription"){const p=this._subs[i.params.subscription];p&&p.processFunc(i.params.result)}else console.warn("this should not happen")};const a=setInterval(()=>{this.emit("poll")},1e3);a.unref&&a.unref()}get websocket(){return this._websocket}detectNetwork(){return this._detectNetwork}get pollingInterval(){return 0}resetEventsBlock(e){Ie.throwError("cannot reset events block on WebSocketProvider",w.errors.UNSUPPORTED_OPERATION,{operation:"resetEventBlock"})}set pollingInterval(e){Ie.throwError("cannot set polling interval on WebSocketProvider",w.errors.UNSUPPORTED_OPERATION,{operation:"setPollingInterval"})}poll(){return at(this,void 0,void 0,function*(){return null})}set polling(e){e&&Ie.throwError("cannot set polling on WebSocketProvider",w.errors.UNSUPPORTED_OPERATION,{operation:"setPolling"})}send(e,t){const a=vi++;return new Promise((r,o)=>{function i(u,s){return u?o(u):r(s)}const p=JSON.stringify({method:e,params:t,id:a,jsonrpc:"2.0"});this.emit("debug",{action:"request",request:JSON.parse(p),provider:this}),this._requests[String(a)]={callback:i,payload:p},this._wsReady&&this.websocket.send(p)})}static defaultUrl(){return"ws://localhost:8546"}_subscribe(e,t,a){return at(this,void 0,void 0,function*(){let r=this._subIds[e];r==null&&(r=Promise.all(t).then(i=>this.send("eth_subscribe",i)),this._subIds[e]=r);const o=yield r;this._subs[o]={tag:e,processFunc:a}})}_startEvent(e){switch(e.type){case"block":this._subscribe("block",["newHeads"],t=>{const a=j.from(t.number).toNumber();this._emitted.block=a,this.emit("block",a)});break;case"pending":this._subscribe("pending",["newPendingTransactions"],t=>{this.emit("pending",t)});break;case"filter":this._subscribe(e.tag,["logs",this._getFilter(e.filter)],t=>{t.removed==null&&(t.removed=!1),this.emit(e.filter,this.formatter.filterLog(t))});break;case"tx":{const t=a=>{const r=a.hash;this.getTransactionReceipt(r).then(o=>{o&&this.emit(r,o)})};t(e),this._subscribe("tx",["newHeads"],a=>{this._events.filter(r=>r.type==="tx").forEach(t)});break}case"debug":case"poll":case"willPoll":case"didPoll":case"error":break;default:console.log("unhandled:",e);break}}_stopEvent(e){let t=e.tag;if(e.type==="tx"){if(this._events.filter(r=>r.type==="tx").length)return;t="tx"}else if(this.listenerCount(e.event))return;const a=this._subIds[t];a&&(delete this._subIds[t],a.then(r=>{this._subs[r]&&(delete this._subs[r],this.send("eth_unsubscribe",[r]))}))}destroy(){return at(this,void 0,void 0,function*(){this.websocket.readyState===we.CONNECTING&&(yield new Promise(e=>{this.websocket.onopen=function(){e(!0)},this.websocket.onerror=function(){e(!1)}})),this.websocket.close(1e3)})}}var Pi=globalThis&&globalThis.__awaiter||function(n,e,t,a){function r(o){return o instanceof t?o:new t(function(i){i(o)})}return new(t||(t=Promise))(function(o,i){function p(l){try{s(a.next(l))}catch(c){i(c)}}function u(l){try{s(a.throw(l))}catch(c){i(c)}}function s(l){l.done?o(l.value):r(l.value).then(p,u)}s((a=a.apply(n,e||[])).next())})};const be=new w($);class _n extends Z{detectNetwork(){const e=Object.create(null,{detectNetwork:{get:()=>super.detectNetwork}});return Pi(this,void 0,void 0,function*(){let t=this.network;return t==null&&(t=yield e.detectNetwork.call(this),t||be.throwError("no network detected",w.errors.UNKNOWN_ERROR,{}),this._network==null&&(g(this,"_network",t),this.emit("network",t,null))),t})}}class J extends _n{constructor(e,t){be.checkAbstract(new.target,J),e=te(new.target,"getNetwork")(e),t=te(new.target,"getApiKey")(t);const a=te(new.target,"getUrl")(e,t);super(a,e),typeof t=="string"?g(this,"apiKey",t):t!=null&&Object.keys(t).forEach(r=>{g(this,r,t[r])})}_startPending(){be.warn("WARNING: API provider does not support pending filters")}isCommunityResource(){return!1}getSigner(e){return be.throwError("API provider does not support signing",w.errors.UNSUPPORTED_OPERATION,{operation:"getSigner"})}listAccounts(){return Promise.resolve([])}static getApiKey(e){return e}static getUrl(e,t){return be.throwError("not implemented; sub-classes must override getUrl",w.errors.NOT_IMPLEMENTED,{operation:"getUrl"})}}const Dt=new w($),Me="_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";class vn extends $e{constructor(e,t){const a=new _t(e,t),r=a.connection.url.replace(/^http/i,"ws").replace(".alchemyapi.",".ws.alchemyapi.");super(r,a.network),g(this,"apiKey",a.apiKey)}isCommunityResource(){return this.apiKey===Me}}class _t extends J{static getWebSocketProvider(e,t){return new vn(e,t)}static getApiKey(e){return e==null?Me:(e&&typeof e!="string"&&Dt.throwArgumentError("invalid apiKey","apiKey",e),e)}static getUrl(e,t){let a=null;switch(e.name){case"homestead":a="eth-mainnet.alchemyapi.io/v2/";break;case"goerli":a="eth-goerli.g.alchemy.com/v2/";break;case"matic":a="polygon-mainnet.g.alchemy.com/v2/";break;case"maticmum":a="polygon-mumbai.g.alchemy.com/v2/";break;case"arbitrum":a="arb-mainnet.g.alchemy.com/v2/";break;case"arbitrum-goerli":a="arb-goerli.g.alchemy.com/v2/";break;case"optimism":a="opt-mainnet.g.alchemy.com/v2/";break;case"optimism-goerli":a="opt-goerli.g.alchemy.com/v2/";break;default:Dt.throwArgumentError("unsupported network","network",arguments[0])}return{allowGzip:!0,url:"https://"+a+t,throttleCallback:(r,o)=>(t===Me&&ke(),Promise.resolve(!0))}}isCommunityResource(){return this.apiKey===Me}}const Ei=new w($),xe="9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972";function ki(n){switch(n){case"homestead":return"rpc.ankr.com/eth/";case"ropsten":return"rpc.ankr.com/eth_ropsten/";case"rinkeby":return"rpc.ankr.com/eth_rinkeby/";case"goerli":return"rpc.ankr.com/eth_goerli/";case"matic":return"rpc.ankr.com/polygon/";case"arbitrum":return"rpc.ankr.com/arbitrum/"}return Ei.throwArgumentError("unsupported network","name",n)}class Pn extends J{isCommunityResource(){return this.apiKey===xe}static getApiKey(e){return e??xe}static getUrl(e,t){t==null&&(t=xe);const a={allowGzip:!0,url:"https://"+ki(e.name)+t,throttleCallback:(r,o)=>(t.apiKey===xe&&ke(),Promise.resolve(!0))};return t.projectSecret!=null&&(a.user="",a.password=t.projectSecret),a}}var Li=globalThis&&globalThis.__awaiter||function(n,e,t,a){function r(o){return o instanceof t?o:new t(function(i){i(o)})}return new(t||(t=Promise))(function(o,i){function p(l){try{s(a.next(l))}catch(c){i(c)}}function u(l){try{s(a.throw(l))}catch(c){i(c)}}function s(l){l.done?o(l.value):r(l.value).then(p,u)}s((a=a.apply(n,e||[])).next())})};const Ct=new w($);class En extends J{static getApiKey(e){return e!=null&&Ct.throwArgumentError("apiKey not supported for cloudflare","apiKey",e),null}static getUrl(e,t){let a=null;switch(e.name){case"homestead":a="https://cloudflare-eth.com/";break;default:Ct.throwArgumentError("unsupported network","network",arguments[0])}return a}perform(e,t){const a=Object.create(null,{perform:{get:()=>super.perform}});return Li(this,void 0,void 0,function*(){return e==="getBlockNumber"?(yield a.perform.call(this,"getBlock",{blockTag:"latest"})).number:a.perform.call(this,e,t)})}}var Be=globalThis&&globalThis.__awaiter||function(n,e,t,a){function r(o){return o instanceof t?o:new t(function(i){i(o)})}return new(t||(t=Promise))(function(o,i){function p(l){try{s(a.next(l))}catch(c){i(c)}}function u(l){try{s(a.throw(l))}catch(c){i(c)}}function s(l){l.done?o(l.value):r(l.value).then(p,u)}s((a=a.apply(n,e||[])).next())})};const ee=new w($);function Rt(n){const e={};for(let t in n){if(n[t]==null)continue;let a=n[t];t==="type"&&a===0||({type:!0,gasLimit:!0,gasPrice:!0,maxFeePerGs:!0,maxPriorityFeePerGas:!0,nonce:!0,value:!0}[t]?a=en(_e(a)):t==="accessList"?a="["+ht(a).map(r=>`{address:"${r.address}",storageKeys:["${r.storageKeys.join('","')}"]}`).join(",")+"]":a=_e(a),e[t]=a)}return e}function Ai(n){if(n.status==0&&(n.message==="No records found"||n.message==="No transactions found"))return n.result;if(n.status!=1||typeof n.message!="string"||!n.message.match(/^OK/)){const e=new Error("invalid response");throw e.result=JSON.stringify(n),(n.result||"").toLowerCase().indexOf("rate limit")>=0&&(e.throttleRetry=!0),e}return n.result}function Mt(n){if(n&&n.status==0&&n.message=="NOTOK"&&(n.result||"").toLowerCase().indexOf("rate limit")>=0){const e=new Error("throttled response");throw e.result=JSON.stringify(n),e.throttleRetry=!0,e}if(n.jsonrpc!="2.0"){const e=new Error("invalid response");throw e.result=JSON.stringify(n),e}if(n.error){const e=new Error(n.error.message||"unknown error");throw n.error.code&&(e.code=n.error.code),n.error.data&&(e.data=n.error.data),e}return n.result}function Nt(n){if(n==="pending")throw new Error("pending not supported");return n==="latest"?n:parseInt(n.substring(2),16)}function rt(n,e,t){if(n==="call"&&e.code===w.errors.SERVER_ERROR){const r=e.error;if(r&&(r.message.match(/reverted/i)||r.message.match(/VM execution error/i))){let o=r.data;if(o&&(o="0x"+o.replace(/^.*0x/i,"")),W(o))return o;ee.throwError("missing revert data in call exception",w.errors.CALL_EXCEPTION,{error:e,data:"0x"})}}let a=e.message;throw e.code===w.errors.SERVER_ERROR&&(e.error&&typeof e.error.message=="string"?a=e.error.message:typeof e.body=="string"?a=e.body:typeof e.responseText=="string"&&(a=e.responseText)),a=(a||"").toLowerCase(),a.match(/insufficient funds/)&&ee.throwError("insufficient funds for intrinsic transaction cost",w.errors.INSUFFICIENT_FUNDS,{error:e,method:n,transaction:t}),a.match(/same hash was already imported|transaction nonce is too low|nonce too low/)&&ee.throwError("nonce has already been used",w.errors.NONCE_EXPIRED,{error:e,method:n,transaction:t}),a.match(/another transaction with same nonce/)&&ee.throwError("replacement fee too low",w.errors.REPLACEMENT_UNDERPRICED,{error:e,method:n,transaction:t}),a.match(/execution failed due to an exception|execution reverted/)&&ee.throwError("cannot estimate gas; transaction may fail or may require manual gas limit",w.errors.UNPREDICTABLE_GAS_LIMIT,{error:e,method:n,transaction:t}),e}class kn extends bt{constructor(e,t){super(e),g(this,"baseUrl",this.getBaseUrl()),g(this,"apiKey",t||null)}getBaseUrl(){switch(this.network?this.network.name:"invalid"){case"homestead":return"https://api.etherscan.io";case"goerli":return"https://api-goerli.etherscan.io";case"sepolia":return"https://api-sepolia.etherscan.io";case"matic":return"https://api.polygonscan.com";case"maticmum":return"https://api-testnet.polygonscan.com";case"arbitrum":return"https://api.arbiscan.io";case"arbitrum-goerli":return"https://api-goerli.arbiscan.io";case"optimism":return"https://api-optimistic.etherscan.io";case"optimism-goerli":return"https://api-goerli-optimistic.etherscan.io"}return ee.throwArgumentError("unsupported network","network",this.network.name)}getUrl(e,t){const a=Object.keys(t).reduce((o,i)=>{const p=t[i];return p!=null&&(o+=`&${i}=${p}`),o},""),r=this.apiKey?`&apikey=${this.apiKey}`:"";return`${this.baseUrl}/api?module=${e}${a}${r}`}getPostUrl(){return`${this.baseUrl}/api`}getPostData(e,t){return t.module=e,t.apikey=this.apiKey,t}fetch(e,t,a){return Be(this,void 0,void 0,function*(){const r=a?this.getPostUrl():this.getUrl(e,t),o=a?this.getPostData(e,t):null,i=e==="proxy"?Mt:Ai;this.emit("debug",{action:"request",request:r,provider:this});const p={url:r,throttleSlotInterval:1e3,throttleCallback:(l,c)=>(this.isCommunityResource()&&ke(),Promise.resolve(!0))};let u=null;o&&(p.headers={"content-type":"application/x-www-form-urlencoded; charset=UTF-8"},u=Object.keys(o).map(l=>`${l}=${o[l]}`).join("&"));const s=yield Tt(p,u,i||Mt);return this.emit("debug",{action:"response",request:r,response:ne(s),provider:this}),s})}detectNetwork(){return Be(this,void 0,void 0,function*(){return this.network})}perform(e,t){const a=Object.create(null,{perform:{get:()=>super.perform}});return Be(this,void 0,void 0,function*(){switch(e){case"getBlockNumber":return this.fetch("proxy",{action:"eth_blockNumber"});case"getGasPrice":return this.fetch("proxy",{action:"eth_gasPrice"});case"getBalance":return this.fetch("account",{action:"balance",address:t.address,tag:t.blockTag});case"getTransactionCount":return this.fetch("proxy",{action:"eth_getTransactionCount",address:t.address,tag:t.blockTag});case"getCode":return this.fetch("proxy",{action:"eth_getCode",address:t.address,tag:t.blockTag});case"getStorageAt":return this.fetch("proxy",{action:"eth_getStorageAt",address:t.address,position:t.position,tag:t.blockTag});case"sendTransaction":return this.fetch("proxy",{action:"eth_sendRawTransaction",hex:t.signedTransaction},!0).catch(r=>rt("sendTransaction",r,t.signedTransaction));case"getBlock":if(t.blockTag)return this.fetch("proxy",{action:"eth_getBlockByNumber",tag:t.blockTag,boolean:t.includeTransactions?"true":"false"});throw new Error("getBlock by blockHash not implemented");case"getTransaction":return this.fetch("proxy",{action:"eth_getTransactionByHash",txhash:t.transactionHash});case"getTransactionReceipt":return this.fetch("proxy",{action:"eth_getTransactionReceipt",txhash:t.transactionHash});case"call":{if(t.blockTag!=="latest")throw new Error("EtherscanProvider does not support blockTag for call");const r=Rt(t.transaction);r.module="proxy",r.action="eth_call";try{return yield this.fetch("proxy",r,!0)}catch(o){return rt("call",o,t.transaction)}}case"estimateGas":{const r=Rt(t.transaction);r.module="proxy",r.action="eth_estimateGas";try{return yield this.fetch("proxy",r,!0)}catch(o){return rt("estimateGas",o,t.transaction)}}case"getLogs":{const r={action:"getLogs"};if(t.filter.fromBlock&&(r.fromBlock=Nt(t.filter.fromBlock)),t.filter.toBlock&&(r.toBlock=Nt(t.filter.toBlock)),t.filter.address&&(r.address=t.filter.address),t.filter.topics&&t.filter.topics.length>0&&(t.filter.topics.length>1&&ee.throwError("unsupported topic count",w.errors.UNSUPPORTED_OPERATION,{topics:t.filter.topics}),t.filter.topics.length===1)){const p=t.filter.topics[0];(typeof p!="string"||p.length!==66)&&ee.throwError("unsupported topic format",w.errors.UNSUPPORTED_OPERATION,{topic0:p}),r.topic0=p}const o=yield this.fetch("logs",r);let i={};for(let p=0;p<o.length;p++){const u=o[p];if(u.blockHash==null){if(i[u.blockNumber]==null){const s=yield this.getBlock(u.blockNumber);s&&(i[u.blockNumber]=s.hash)}u.blockHash=i[u.blockNumber]}}return o}case"getEtherPrice":return this.network.name!=="homestead"?0:parseFloat((yield this.fetch("stats",{action:"ethprice"})).ethusd)}return a.perform.call(this,e,t)})}getHistory(e,t,a){return Be(this,void 0,void 0,function*(){const r={action:"txlist",address:yield this.resolveName(e),startblock:t??0,endblock:a??99999999,sort:"asc"};return(yield this.fetch("account",r)).map(i=>{["contractAddress","to"].forEach(function(u){i[u]==""&&delete i[u]}),i.creates==null&&i.contractAddress!=null&&(i.creates=i.contractAddress);const p=this.formatter.transactionResponse(i);return i.timeStamp&&(p.timestamp=parseInt(i.timeStamp)),p})})}isCommunityResource(){return this.apiKey==null}}var Ue=globalThis&&globalThis.__awaiter||function(n,e,t,a){function r(o){return o instanceof t?o:new t(function(i){i(o)})}return new(t||(t=Promise))(function(o,i){function p(l){try{s(a.next(l))}catch(c){i(c)}}function u(l){try{s(a.throw(l))}catch(c){i(c)}}function s(l){l.done?o(l.value):r(l.value).then(p,u)}s((a=a.apply(n,e||[])).next())})};const ie=new w($);function Se(){return new Date().getTime()}function Ft(n){let e=null;for(let t=0;t<n.length;t++){const a=n[t];if(a==null)return null;e?e.name===a.name&&e.chainId===a.chainId&&(e.ensAddress===a.ensAddress||e.ensAddress==null&&a.ensAddress==null)||ie.throwArgumentError("provider mismatch","networks",n):e=a}return e}function Ot(n,e){n=n.slice().sort();const t=Math.floor(n.length/2);if(n.length%2)return n[t];const a=n[t-1],r=n[t];return e!=null&&Math.abs(a-r)>e?null:(a+r)/2}function ce(n){if(n===null)return"null";if(typeof n=="number"||typeof n=="boolean")return JSON.stringify(n);if(typeof n=="string")return n;if(j.isBigNumber(n))return n.toString();if(Array.isArray(n))return JSON.stringify(n.map(e=>ce(e)));if(typeof n=="object"){const e=Object.keys(n);return e.sort(),"{"+e.map(t=>{let a=n[t];return typeof a=="function"?a="[function]":a=ce(a),JSON.stringify(t)+":"+a}).join(",")+"}"}throw new Error("unknown value type: "+typeof n)}let Ii=1;function Ut(n){let e=null,t=null,a=new Promise(i=>{e=function(){t&&(clearTimeout(t),t=null),i()},t=setTimeout(e,n)});const r=i=>(a=a.then(i),a);function o(){return a}return{cancel:e,getPromise:o,wait:r}}const xi=[w.errors.CALL_EXCEPTION,w.errors.INSUFFICIENT_FUNDS,w.errors.NONCE_EXPIRED,w.errors.REPLACEMENT_UNDERPRICED,w.errors.UNPREDICTABLE_GAS_LIMIT],Bi=["address","args","errorArgs","errorSignature","method","transaction"];function De(n,e){const t={weight:n.weight};return Object.defineProperty(t,"provider",{get:()=>n.provider}),n.start&&(t.start=n.start),e&&(t.duration=e-n.start),n.done&&(n.error?t.error=n.error:t.result=n.result||null),t}function Si(n,e){return function(t){const a={};t.forEach(o=>{const i=n(o.result);a[i]||(a[i]={count:0,result:o.result}),a[i].count++});const r=Object.keys(a);for(let o=0;o<r.length;o++){const i=a[r[o]];if(i.count>=e)return i.result}}}function Di(n,e,t){let a=ce;switch(e){case"getBlockNumber":return function(r){const o=r.map(p=>p.result);let i=Ot(r.map(p=>p.result),2);if(i!=null)return i=Math.ceil(i),o.indexOf(i+1)>=0&&i++,i>=n._highestBlockNumber&&(n._highestBlockNumber=i),n._highestBlockNumber};case"getGasPrice":return function(r){const o=r.map(i=>i.result);return o.sort(),o[Math.floor(o.length/2)]};case"getEtherPrice":return function(r){return Ot(r.map(o=>o.result))};case"getBalance":case"getTransactionCount":case"getCode":case"getStorageAt":case"call":case"estimateGas":case"getLogs":break;case"getTransaction":case"getTransactionReceipt":a=function(r){return r==null?null:(r=V(r),r.confirmations=-1,ce(r))};break;case"getBlock":t.includeTransactions?a=function(r){return r==null?null:(r=V(r),r.transactions=r.transactions.map(o=>(o=V(o),o.confirmations=-1,o)),ce(r))}:a=function(r){return r==null?null:ce(r)};break;default:throw new Error("unknown method: "+e)}return Si(a,n.quorum)}function fe(n,e){return Ue(this,void 0,void 0,function*(){const t=n.provider;return t.blockNumber!=null&&t.blockNumber>=e||e===-1?t:tn(()=>new Promise((a,r)=>{setTimeout(function(){return t.blockNumber>=e?a(t):n.cancelled?a(null):a(void 0)},0)}),{oncePoll:t})})}function Ci(n,e,t,a){return Ue(this,void 0,void 0,function*(){let r=n.provider;switch(t){case"getBlockNumber":case"getGasPrice":return r[t]();case"getEtherPrice":if(r.getEtherPrice)return r.getEtherPrice();break;case"getBalance":case"getTransactionCount":case"getCode":return a.blockTag&&W(a.blockTag)&&(r=yield fe(n,e)),r[t](a.address,a.blockTag||"latest");case"getStorageAt":return a.blockTag&&W(a.blockTag)&&(r=yield fe(n,e)),r.getStorageAt(a.address,a.position,a.blockTag||"latest");case"getBlock":return a.blockTag&&W(a.blockTag)&&(r=yield fe(n,e)),r[a.includeTransactions?"getBlockWithTransactions":"getBlock"](a.blockTag||a.blockHash);case"call":case"estimateGas":return a.blockTag&&W(a.blockTag)&&(r=yield fe(n,e)),t==="call"&&a.blockTag?r[t](a.transaction,a.blockTag):r[t](a.transaction);case"getTransaction":case"getTransactionReceipt":return r[t](a.transactionHash);case"getLogs":{let o=a.filter;return(o.fromBlock&&W(o.fromBlock)||o.toBlock&&W(o.toBlock))&&(r=yield fe(n,e)),r.getLogs(o)}}return ie.throwError("unknown method error",w.errors.UNKNOWN_ERROR,{method:t,params:a})})}class Ln extends bt{constructor(e,t){e.length===0&&ie.throwArgumentError("missing providers","providers",e);const a=e.map((i,p)=>{if(dt.isProvider(i)){const l=ut(i)?2e3:750;return Object.freeze({provider:i,weight:1,stallTimeout:l,priority:1})}const u=V(i);u.priority==null&&(u.priority=1),u.stallTimeout==null&&(u.stallTimeout=ut(i)?2e3:750),u.weight==null&&(u.weight=1);const s=u.weight;return(s%1||s>512||s<1)&&ie.throwArgumentError("invalid weight; must be integer in [1, 512]",`providers[${p}].weight`,s),Object.freeze(u)}),r=a.reduce((i,p)=>i+p.weight,0);t==null?t=r/2:t>r&&ie.throwArgumentError("quorum will always fail; larger than total weight","quorum",t);let o=Ft(a.map(i=>i.provider.network));o==null&&(o=new Promise((i,p)=>{setTimeout(()=>{this.detectNetwork().then(i,p)},0)})),super(o),g(this,"providerConfigs",Object.freeze(a)),g(this,"quorum",t),this._highestBlockNumber=-1}detectNetwork(){return Ue(this,void 0,void 0,function*(){const e=yield Promise.all(this.providerConfigs.map(t=>t.provider.getNetwork()));return Ft(e)})}perform(e,t){return Ue(this,void 0,void 0,function*(){if(e==="sendTransaction"){const u=yield Promise.all(this.providerConfigs.map(s=>s.provider.sendTransaction(t.signedTransaction).then(l=>l.hash,l=>l)));for(let s=0;s<u.length;s++){const l=u[s];if(typeof l=="string")return l}throw u[0]}this._highestBlockNumber===-1&&e!=="getBlockNumber"&&(yield this.getBlockNumber());const a=Di(this,e,t),r=on(this.providerConfigs.map(V));r.sort((u,s)=>u.priority-s.priority);const o=this._highestBlockNumber;let i=0,p=!0;for(;;){const u=Se();let s=r.filter(y=>y.runner&&u-y.start<y.stallTimeout).reduce((y,b)=>y+b.weight,0);for(;s<this.quorum&&i<r.length;){const y=r[i++],b=Ii++;y.start=Se(),y.staller=Ut(y.stallTimeout),y.staller.wait(()=>{y.staller=null}),y.runner=Ci(y,o,e,t).then(P=>{y.done=!0,y.result=P,this.listenerCount("debug")&&this.emit("debug",{action:"request",rid:b,backend:De(y,Se()),request:{method:e,params:ne(t)},provider:this})},P=>{y.done=!0,y.error=P,this.listenerCount("debug")&&this.emit("debug",{action:"request",rid:b,backend:De(y,Se()),request:{method:e,params:ne(t)},provider:this})}),this.listenerCount("debug")&&this.emit("debug",{action:"request",rid:b,backend:De(y,null),request:{method:e,params:ne(t)},provider:this}),s+=y.weight}const l=[];r.forEach(y=>{y.done||!y.runner||(l.push(y.runner),y.staller&&l.push(y.staller.getPromise()))}),l.length&&(yield Promise.race(l));const c=r.filter(y=>y.done&&y.error==null);if(c.length>=this.quorum){const y=a(c);if(y!==void 0)return r.forEach(b=>{b.staller&&b.staller.cancel(),b.cancelled=!0}),y;p||(yield Ut(100).getPromise()),p=!1}const m=r.reduce((y,b)=>{if(!b.done||b.error==null)return y;const P=b.error.code;return xi.indexOf(P)>=0&&(y[P]||(y[P]={error:b.error,weight:0}),y[P].weight+=b.weight),y},{});if(Object.keys(m).forEach(y=>{const b=m[y];if(b.weight<this.quorum)return;r.forEach(v=>{v.staller&&v.staller.cancel(),v.cancelled=!0});const P=b.error,L={};Bi.forEach(v=>{P[v]!=null&&(L[v]=P[v])}),ie.throwError(P.reason||P.message,y,L)}),r.filter(y=>!y.done).length===0)break}return r.forEach(u=>{u.staller&&u.staller.cancel(),u.cancelled=!0}),ie.throwError("failed to meet quorum",w.errors.SERVER_ERROR,{method:e,params:t,results:r.map(u=>De(u)),provider:this})})}}const An=null,Ne=new w($),Te="84842078b09946638c03157f83405213";class In extends $e{constructor(e,t){const a=new vt(e,t),r=a.connection;r.password&&Ne.throwError("INFURA WebSocket project secrets unsupported",w.errors.UNSUPPORTED_OPERATION,{operation:"InfuraProvider.getWebSocketProvider()"});const o=r.url.replace(/^http/i,"ws").replace("/v3/","/ws/v3/");super(o,e),g(this,"apiKey",a.projectId),g(this,"projectId",a.projectId),g(this,"projectSecret",a.projectSecret)}isCommunityResource(){return this.projectId===Te}}class vt extends J{static getWebSocketProvider(e,t){return new In(e,t)}static getApiKey(e){const t={apiKey:Te,projectId:Te,projectSecret:null};return e==null||(typeof e=="string"?t.projectId=e:e.projectSecret!=null?(Ne.assertArgument(typeof e.projectId=="string","projectSecret requires a projectId","projectId",e.projectId),Ne.assertArgument(typeof e.projectSecret=="string","invalid projectSecret","projectSecret","[REDACTED]"),t.projectId=e.projectId,t.projectSecret=e.projectSecret):e.projectId&&(t.projectId=e.projectId),t.apiKey=t.projectId),t}static getUrl(e,t){let a=null;switch(e?e.name:"unknown"){case"homestead":a="mainnet.infura.io";break;case"goerli":a="goerli.infura.io";break;case"sepolia":a="sepolia.infura.io";break;case"matic":a="polygon-mainnet.infura.io";break;case"maticmum":a="polygon-mumbai.infura.io";break;case"optimism":a="optimism-mainnet.infura.io";break;case"optimism-goerli":a="optimism-goerli.infura.io";break;case"arbitrum":a="arbitrum-mainnet.infura.io";break;case"arbitrum-goerli":a="arbitrum-goerli.infura.io";break;default:Ne.throwError("unsupported network",w.errors.INVALID_ARGUMENT,{argument:"network",value:e})}const r={allowGzip:!0,url:"https://"+a+"/v3/"+t.projectId,throttleCallback:(o,i)=>(t.projectId===Te&&ke(),Promise.resolve(!0))};return t.projectSecret!=null&&(r.user="",r.password=t.projectSecret),r}isCommunityResource(){return this.projectId===Te}}class Ri extends Z{send(e,t){const a={method:e,params:t,id:this._nextId++,jsonrpc:"2.0"};this._pendingBatch==null&&(this._pendingBatch=[]);const r={request:a,resolve:null,reject:null},o=new Promise((i,p)=>{r.resolve=i,r.reject=p});return this._pendingBatch.push(r),this._pendingBatchAggregator||(this._pendingBatchAggregator=setTimeout(()=>{const i=this._pendingBatch;this._pendingBatch=null,this._pendingBatchAggregator=null;const p=i.map(u=>u.request);return this.emit("debug",{action:"requestBatch",request:ne(p),provider:this}),Tt(this.connection,JSON.stringify(p)).then(u=>{this.emit("debug",{action:"response",request:p,response:u,provider:this}),i.forEach((s,l)=>{const c=u[l];if(c.error){const m=new Error(c.error.message);m.code=c.error.code,m.data=c.error.data,s.reject(m)}else s.resolve(c.result)})},u=>{this.emit("debug",{action:"response",error:u,request:p,provider:this}),i.forEach(s=>{s.reject(u)})})},10)),o}}const it=new w($),Mi="ETHERS_JS_SHARED";class xn extends J{static getApiKey(e){return e&&typeof e!="string"&&it.throwArgumentError("invalid apiKey","apiKey",e),e||Mi}static getUrl(e,t){it.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");let a=null;switch(e.name){case"homestead":a="https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";break;case"ropsten":a="https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";break;case"rinkeby":a="https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";break;case"goerli":a="https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";break;case"kovan":a="https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";break;default:it.throwArgumentError("unsupported network","network",arguments[0])}return a+"?apiKey="+t}}const Ht=new w($),Gt="62e1ad51b37b8e00394bda3b";class Bn extends J{static getApiKey(e){const t={applicationId:null,loadBalancer:!0,applicationSecretKey:null};return e==null?t.applicationId=Gt:typeof e=="string"?t.applicationId=e:e.applicationSecretKey!=null?(t.applicationId=e.applicationId,t.applicationSecretKey=e.applicationSecretKey):e.applicationId?t.applicationId=e.applicationId:Ht.throwArgumentError("unsupported PocketProvider apiKey","apiKey",e),t}static getUrl(e,t){let a=null;switch(e?e.name:"unknown"){case"goerli":a="eth-goerli.gateway.pokt.network";break;case"homestead":a="eth-mainnet.gateway.pokt.network";break;case"kovan":a="poa-kovan.gateway.pokt.network";break;case"matic":a="poly-mainnet.gateway.pokt.network";break;case"maticmum":a="polygon-mumbai-rpc.gateway.pokt.network";break;case"rinkeby":a="eth-rinkeby.gateway.pokt.network";break;case"ropsten":a="eth-ropsten.gateway.pokt.network";break;default:Ht.throwError("unsupported network",w.errors.INVALID_ARGUMENT,{argument:"network",value:e})}const r=`https://${a}/v1/lb/${t.applicationId}`,o={headers:{},url:r};return t.applicationSecretKey!=null&&(o.user="",o.password=t.applicationSecretKey),o}isCommunityResource(){return this.applicationId===Gt}}const zt=new w($);function Pt(n,e){if(n==null&&(n="homestead"),typeof n=="string"){const a=n.match(/^(ws|http)s?:/i);if(a)switch(a[1].toLowerCase()){case"http":case"https":return new Z(n);case"ws":case"wss":return new $e(n);default:zt.throwArgumentError("unsupported URL scheme","network",n)}}const t=nn(n);return(!t||!t._defaultProvider)&&zt.throwError("unsupported getDefaultProvider network",w.errors.NETWORK_ERROR,{operation:"getDefaultProvider",network:n}),t._defaultProvider({FallbackProvider:Ln,AlchemyProvider:_t,AnkrProvider:Pn,CloudflareProvider:En,EtherscanProvider:kn,InfuraProvider:vt,JsonRpcProvider:Z,NodesmithProvider:xn,PocketProvider:Bn,Web3Provider:an,IpcProvider:An},e)}const Sn=Object.freeze(Object.defineProperty({__proto__:null,AlchemyProvider:_t,AlchemyWebSocketProvider:vn,AnkrProvider:Pn,BaseProvider:bt,CloudflareProvider:En,EtherscanProvider:kn,FallbackProvider:Ln,Formatter:da,InfuraProvider:vt,InfuraWebSocketProvider:In,IpcProvider:An,JsonRpcBatchProvider:Ri,JsonRpcProvider:Z,JsonRpcSigner:ma,NodesmithProvider:xn,PocketProvider:Bn,Provider:dt,Resolver:fa,StaticJsonRpcProvider:_n,UrlJsonRpcProvider:J,Web3Provider:an,WebSocketProvider:$e,getDefaultProvider:Pt,getNetwork:nn,isCommunityResourcable:ha,isCommunityResource:ut,showThrottleMessage:ke},Symbol.toStringTag,{value:"Module"})),Dn=Object.freeze(Object.defineProperty({__proto__:null,AbiCoder:ba,ConstructorFragment:Ta,ErrorFragment:ga,EventFragment:wa,FormatTypes:_a,Fragment:va,FunctionFragment:Pa,HDNode:_r,Indexed:sn,Interface:lt,LogDescription:vr,Logger:w,ParamType:Ea,RLP:ka,SigningKey:La,get SupportedAlgorithm(){return Aa},TransactionDescription:Pr,get TransactionTypes(){return Ia},get UnicodeNormalizationForm(){return xa},Utf8ErrorFuncs:Ba,get Utf8ErrorReason(){return Sa},_TypedDataEncoder:Da,_fetchData:Ca,_toEscapedUtf8String:Ra,accessListify:ht,arrayify:Qt,base58:Ma,base64:Er,checkProperties:Na,checkResultErrors:Xt,commify:kr,computeAddress:Fa,computeHmac:Oa,computePublicKey:Ua,concat:Jt,deepCopy:ne,defaultAbiCoder:Ha,defaultPath:Lr,defineReadOnly:g,dnsEncode:Ga,entropyToMnemonic:Ar,fetchJson:Tt,formatBytes32String:Ir,formatEther:xr,formatUnits:Br,getAccountPath:Sr,getAddress:ze,getContractAddress:mt,getCreate2Address:za,getIcapAddress:ja,getJsonWalletAddress:Dr,getStatic:te,hashMessage:Cr,hexConcat:Va,hexDataLength:$a,hexDataSlice:qa,hexStripZeros:Wa,hexValue:en,hexZeroPad:Ya,hexlify:_e,id:Za,isAddress:Ka,isBytes:Kt,isBytesLike:Ja,isHexString:W,isValidMnemonic:Rr,isValidName:Xa,joinSignature:Qa,keccak256:er,mnemonicToEntropy:Mr,mnemonicToSeed:Nr,namehash:tr,nameprep:Fr,parseBytes32String:Or,parseEther:Ur,parseTransaction:nr,parseUnits:Hr,poll:tn,randomBytes:Gr,recoverAddress:ar,recoverPublicKey:rr,resolveProperties:Re,ripemd160:ir,serializeTransaction:sr,sha256:or,sha512:ur,shallowCopy:V,shuffled:on,solidityKeccak256:zr,solidityPack:jr,soliditySha256:Vr,splitSignature:lr,stripZeros:pr,toUtf8Bytes:cr,toUtf8CodePoints:yr,toUtf8String:dr,verifyMessage:$r,verifyTypedData:qr,zeroPad:mr},Symbol.toStringTag,{value:"Module"})),Et="ethers/5.7.2",Cn=new w(Et),Rn=Object.freeze(Object.defineProperty({__proto__:null,BaseContract:wt,BigNumber:j,Contract:Pe,ContractFactory:wn,FixedNumber:un,Signer:Ge,VoidSigner:ft,Wallet:ln,Wordlist:pn,constants:hn,get errors(){return rn},getDefaultProvider:Pt,logger:Cn,providers:Sn,utils:Dn,version:Et,wordlists:cn},Symbol.toStringTag,{value:"Module"}));try{const n=window;n._ethers==null&&(n._ethers=Rn)}catch{}const Ni=Object.freeze(Object.defineProperty({__proto__:null,BaseContract:wt,BigNumber:j,Contract:Pe,ContractFactory:wn,FixedNumber:un,Signer:Ge,VoidSigner:ft,Wallet:ln,Wordlist:pn,constants:hn,get errors(){return rn},ethers:Rn,getDefaultProvider:Pt,logger:Cn,providers:Sn,utils:Dn,version:Et,wordlists:cn},Symbol.toStringTag,{value:"Module"}));var Mn={},st={};const O=fr(Ni);var Le={};(function(n){Object.defineProperty(n,"__esModule",{value:!0}),n.AccountNonceOrdering=n.AccountAbstractionVersion=n.TransactionStatus=n.PriorityOpTree=n.PriorityQueueType=n.Network=void 0,function(e){e[e.Mainnet=1]="Mainnet",e[e.Ropsten=3]="Ropsten",e[e.Rinkeby=4]="Rinkeby",e[e.Goerli=5]="Goerli",e[e.Localhost=9]="Localhost"}(n.Network||(n.Network={})),function(e){e[e.Deque=0]="Deque",e[e.HeapBuffer=1]="HeapBuffer",e[e.Heap=2]="Heap"}(n.PriorityQueueType||(n.PriorityQueueType={})),function(e){e[e.Full=0]="Full",e[e.Rollup=1]="Rollup"}(n.PriorityOpTree||(n.PriorityOpTree={})),function(e){e.NotFound="not-found",e.Processing="processing",e.Committed="committed",e.Finalized="finalized"}(n.TransactionStatus||(n.TransactionStatus={})),function(e){e[e.None=0]="None",e[e.Version1=1]="Version1"}(n.AccountAbstractionVersion||(n.AccountAbstractionVersion={})),function(e){e[e.Sequential=0]="Sequential",e[e.Arbitrary=1]="Arbitrary"}(n.AccountNonceOrdering||(n.AccountNonceOrdering={}))})(Le);var ot={},re={},qe={},We={};Object.defineProperty(We,"__esModule",{value:!0});We.IZkSyncFactory=void 0;const Fi=O;class Oi{static connect(e,t){return new Fi.Contract(e,Ui,t)}}We.IZkSyncFactory=Oi;const Ui=[{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"blockNumber",type:"uint256"},{indexed:!0,internalType:"bytes32",name:"blockHash",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"commitment",type:"bytes32"}],name:"BlockCommit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"blockNumber",type:"uint256"},{indexed:!0,internalType:"bytes32",name:"blockHash",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"commitment",type:"bytes32"}],name:"BlockExecution",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"totalBlocksCommitted",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBlocksVerified",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBlocksExecuted",type:"uint256"}],name:"BlocksRevert",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"previousLastVerifiedBlock",type:"uint256"},{indexed:!0,internalType:"uint256",name:"currentLastVerifiedBlock",type:"uint256"}],name:"BlocksVerification",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!0,internalType:"bytes32",name:"proposalHash",type:"bytes32"}],name:"CancelUpgradeProposal",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EthWithdrawalFinalized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!0,internalType:"bytes32",name:"proposalHash",type:"bytes32"},{indexed:!1,internalType:"bytes32",name:"proposalSalt",type:"bytes32"}],name:"ExecuteUpgrade",type:"event"},{anonymous:!1,inputs:[],name:"Freeze",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"isPorterAvailable",type:"bool"}],name:"IsPorterAvailableStatusUpdate",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldGovernor",type:"address"},{indexed:!0,internalType:"address",name:"newGovernor",type:"address"}],name:"NewGovernor",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"previousBytecodeHash",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newBytecodeHash",type:"bytes32"}],name:"NewL2BootloaderBytecodeHash",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"previousBytecodeHash",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newBytecodeHash",type:"bytes32"}],name:"NewL2DefaultAccountBytecodeHash",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldPendingGovernor",type:"address"},{indexed:!0,internalType:"address",name:"newPendingGovernor",type:"address"}],name:"NewPendingGovernor",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"txId",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!1,internalType:"uint64",name:"expirationTimestamp",type:"uint64"},{components:[{internalType:"uint256",name:"txType",type:"uint256"},{internalType:"uint256",name:"from",type:"uint256"},{internalType:"uint256",name:"to",type:"uint256"},{internalType:"uint256",name:"gasLimit",type:"uint256"},{internalType:"uint256",name:"gasPerPubdataByteLimit",type:"uint256"},{internalType:"uint256",name:"maxFeePerGas",type:"uint256"},{internalType:"uint256",name:"maxPriorityFeePerGas",type:"uint256"},{internalType:"uint256",name:"paymaster",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256[4]",name:"reserved",type:"uint256[4]"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"signature",type:"bytes"},{internalType:"uint256[]",name:"factoryDeps",type:"uint256[]"},{internalType:"bytes",name:"paymasterInput",type:"bytes"},{internalType:"bytes",name:"reservedDynamic",type:"bytes"}],indexed:!1,internalType:"struct IMailbox.L2CanonicalTransaction",name:"transaction",type:"tuple"},{indexed:!1,internalType:"bytes[]",name:"factoryDeps",type:"bytes[]"}],name:"NewPriorityRequest",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldPriorityTxMaxGasLimit",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newPriorityTxMaxGasLimit",type:"uint256"}],name:"NewPriorityTxMaxGasLimit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldVerifier",type:"address"},{indexed:!0,internalType:"address",name:"newVerifier",type:"address"}],name:"NewVerifier",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"bytes32",name:"recursionNodeLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionLeafLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionCircuitsSetVksHash",type:"bytes32"}],indexed:!1,internalType:"struct VerifierParams",name:"oldVerifierParams",type:"tuple"},{components:[{internalType:"bytes32",name:"recursionNodeLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionLeafLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionCircuitsSetVksHash",type:"bytes32"}],indexed:!1,internalType:"struct VerifierParams",name:"newVerifierParams",type:"tuple"}],name:"NewVerifierParams",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!0,internalType:"bytes32",name:"proposalHash",type:"bytes32"}],name:"ProposeShadowUpgrade",type:"event"},{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"facet",type:"address"},{internalType:"enum Diamond.Action",name:"action",type:"uint8"},{internalType:"bool",name:"isFreezable",type:"bool"},{internalType:"bytes4[]",name:"selectors",type:"bytes4[]"}],internalType:"struct Diamond.FacetCut[]",name:"facetCuts",type:"tuple[]"},{internalType:"address",name:"initAddress",type:"address"},{internalType:"bytes",name:"initCalldata",type:"bytes"}],indexed:!1,internalType:"struct Diamond.DiamondCutData",name:"diamondCut",type:"tuple"},{indexed:!0,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"proposalSalt",type:"bytes32"}],name:"ProposeTransparentUpgrade",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!0,internalType:"bytes32",name:"proposalHash",type:"bytes32"}],name:"SecurityCouncilUpgradeApprove",type:"event"},{anonymous:!1,inputs:[],name:"Unfreeze",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"validatorAddress",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"ValidatorStatusUpdate",type:"event"},{inputs:[],name:"acceptGovernor",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"_proposedUpgradeHash",type:"bytes32"}],name:"cancelUpgradeProposal",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint64",name:"blockNumber",type:"uint64"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{internalType:"uint64",name:"indexRepeatedStorageChanges",type:"uint64"},{internalType:"uint256",name:"numberOfLayer1Txs",type:"uint256"},{internalType:"bytes32",name:"priorityOperationsHash",type:"bytes32"},{internalType:"bytes32",name:"l2LogsTreeRoot",type:"bytes32"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"bytes32",name:"commitment",type:"bytes32"}],internalType:"struct IExecutor.StoredBlockInfo",name:"_lastCommittedBlockData",type:"tuple"},{components:[{internalType:"uint64",name:"blockNumber",type:"uint64"},{internalType:"uint64",name:"timestamp",type:"uint64"},{internalType:"uint64",name:"indexRepeatedStorageChanges",type:"uint64"},{internalType:"bytes32",name:"newStateRoot",type:"bytes32"},{internalType:"uint256",name:"numberOfLayer1Txs",type:"uint256"},{internalType:"bytes32",name:"l2LogsTreeRoot",type:"bytes32"},{internalType:"bytes32",name:"priorityOperationsHash",type:"bytes32"},{internalType:"bytes",name:"initialStorageChanges",type:"bytes"},{internalType:"bytes",name:"repeatedStorageChanges",type:"bytes"},{internalType:"bytes",name:"l2Logs",type:"bytes"},{internalType:"bytes[]",name:"l2ArbitraryLengthMessages",type:"bytes[]"},{internalType:"bytes[]",name:"factoryDeps",type:"bytes[]"}],internalType:"struct IExecutor.CommitBlockInfo[]",name:"_newBlocksData",type:"tuple[]"}],name:"commitBlocks",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint64",name:"blockNumber",type:"uint64"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{internalType:"uint64",name:"indexRepeatedStorageChanges",type:"uint64"},{internalType:"uint256",name:"numberOfLayer1Txs",type:"uint256"},{internalType:"bytes32",name:"priorityOperationsHash",type:"bytes32"},{internalType:"bytes32",name:"l2LogsTreeRoot",type:"bytes32"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"bytes32",name:"commitment",type:"bytes32"}],internalType:"struct IExecutor.StoredBlockInfo[]",name:"_blocksData",type:"tuple[]"}],name:"executeBlocks",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"facet",type:"address"},{internalType:"enum Diamond.Action",name:"action",type:"uint8"},{internalType:"bool",name:"isFreezable",type:"bool"},{internalType:"bytes4[]",name:"selectors",type:"bytes4[]"}],internalType:"struct Diamond.FacetCut[]",name:"facetCuts",type:"tuple[]"},{internalType:"address",name:"initAddress",type:"address"},{internalType:"bytes",name:"initCalldata",type:"bytes"}],internalType:"struct Diamond.DiamondCutData",name:"_diamondCut",type:"tuple"},{internalType:"bytes32",name:"_proposalSalt",type:"bytes32"}],name:"executeUpgrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"_selector",type:"bytes4"}],name:"facetAddress",outputs:[{internalType:"address",name:"facet",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"facetAddresses",outputs:[{internalType:"address[]",name:"facets",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_facet",type:"address"}],name:"facetFunctionSelectors",outputs:[{internalType:"bytes4[]",name:"",type:"bytes4[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"facets",outputs:[{components:[{internalType:"address",name:"addr",type:"address"},{internalType:"bytes4[]",name:"selectors",type:"bytes4[]"}],internalType:"struct IGetters.Facet[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_l2BlockNumber",type:"uint256"},{internalType:"uint256",name:"_l2MessageIndex",type:"uint256"},{internalType:"uint16",name:"_l2TxNumberInBlock",type:"uint16"},{internalType:"bytes",name:"_message",type:"bytes"},{internalType:"bytes32[]",name:"_merkleProof",type:"bytes32[]"}],name:"finalizeEthWithdrawal",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"freezeDiamond",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getCurrentProposalId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getFirstUnprocessedPriorityTx",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGovernor",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getL2BootloaderBytecodeHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getL2DefaultAccountBytecodeHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPendingGovernor",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPriorityQueueSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProposedUpgradeHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProposedUpgradeTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSecurityCouncil",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalBlocksCommitted",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalBlocksExecuted",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalBlocksVerified",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalPriorityTxs",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getUpgradeProposalState",outputs:[{internalType:"enum UpgradeState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVerifier",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVerifierParams",outputs:[{components:[{internalType:"bytes32",name:"recursionNodeLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionLeafLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionCircuitsSetVksHash",type:"bytes32"}],internalType:"struct VerifierParams",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getpriorityTxMaxGasLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"isApprovedBySecurityCouncil",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDiamondStorageFrozen",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_l2BlockNumber",type:"uint256"},{internalType:"uint256",name:"_l2MessageIndex",type:"uint256"}],name:"isEthWithdrawalFinalized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_facet",type:"address"}],name:"isFacetFreezable",outputs:[{internalType:"bool",name:"isFreezable",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"_selector",type:"bytes4"}],name:"isFunctionFreezable",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_address",type:"address"}],name:"isValidator",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_blockNumber",type:"uint256"}],name:"l2LogsRootHash",outputs:[{internalType:"bytes32",name:"hash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_gasPrice",type:"uint256"},{internalType:"uint256",name:"_l2GasLimit",type:"uint256"},{internalType:"uint256",name:"_l2GasPerPubdataByteLimit",type:"uint256"}],name:"l2TransactionBaseCost",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"priorityQueueFrontOperation",outputs:[{components:[{internalType:"bytes32",name:"canonicalTxHash",type:"bytes32"},{internalType:"uint64",name:"expirationTimestamp",type:"uint64"},{internalType:"uint192",name:"layer2Tip",type:"uint192"}],internalType:"struct PriorityOperation",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"_proposalHash",type:"bytes32"},{internalType:"uint40",name:"_proposalId",type:"uint40"}],name:"proposeShadowUpgrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"facet",type:"address"},{internalType:"enum Diamond.Action",name:"action",type:"uint8"},{internalType:"bool",name:"isFreezable",type:"bool"},{internalType:"bytes4[]",name:"selectors",type:"bytes4[]"}],internalType:"struct Diamond.FacetCut[]",name:"facetCuts",type:"tuple[]"},{internalType:"address",name:"initAddress",type:"address"},{internalType:"bytes",name:"initCalldata",type:"bytes"}],internalType:"struct Diamond.DiamondCutData",name:"_diamondCut",type:"tuple"},{internalType:"uint40",name:"_proposalId",type:"uint40"}],name:"proposeTransparentUpgrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint64",name:"blockNumber",type:"uint64"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{internalType:"uint64",name:"indexRepeatedStorageChanges",type:"uint64"},{internalType:"uint256",name:"numberOfLayer1Txs",type:"uint256"},{internalType:"bytes32",name:"priorityOperationsHash",type:"bytes32"},{internalType:"bytes32",name:"l2LogsTreeRoot",type:"bytes32"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"bytes32",name:"commitment",type:"bytes32"}],internalType:"struct IExecutor.StoredBlockInfo",name:"_prevBlock",type:"tuple"},{components:[{internalType:"uint64",name:"blockNumber",type:"uint64"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{internalType:"uint64",name:"indexRepeatedStorageChanges",type:"uint64"},{internalType:"uint256",name:"numberOfLayer1Txs",type:"uint256"},{internalType:"bytes32",name:"priorityOperationsHash",type:"bytes32"},{internalType:"bytes32",name:"l2LogsTreeRoot",type:"bytes32"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"bytes32",name:"commitment",type:"bytes32"}],internalType:"struct IExecutor.StoredBlockInfo[]",name:"_committedBlocks",type:"tuple[]"},{components:[{internalType:"uint256[]",name:"recursiveAggregationInput",type:"uint256[]"},{internalType:"uint256[]",name:"serializedProof",type:"uint256[]"}],internalType:"struct IExecutor.ProofInput",name:"_proof",type:"tuple"}],name:"proveBlocks",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"_l2TxHash",type:"bytes32"},{internalType:"uint256",name:"_l2BlockNumber",type:"uint256"},{internalType:"uint256",name:"_l2MessageIndex",type:"uint256"},{internalType:"uint16",name:"_l2TxNumberInBlock",type:"uint16"},{internalType:"bytes32[]",name:"_merkleProof",type:"bytes32[]"},{internalType:"enum TxStatus",name:"_status",type:"uint8"}],name:"proveL1ToL2TransactionStatus",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_blockNumber",type:"uint256"},{internalType:"uint256",name:"_index",type:"uint256"},{components:[{internalType:"uint8",name:"l2ShardId",type:"uint8"},{internalType:"bool",name:"isService",type:"bool"},{internalType:"uint16",name:"txNumberInBlock",type:"uint16"},{internalType:"address",name:"sender",type:"address"},{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"bytes32",name:"value",type:"bytes32"}],internalType:"struct L2Log",name:"_log",type:"tuple"},{internalType:"bytes32[]",name:"_proof",type:"bytes32[]"}],name:"proveL2LogInclusion",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_blockNumber",type:"uint256"},{internalType:"uint256",name:"_index",type:"uint256"},{components:[{internalType:"uint16",name:"txNumberInBlock",type:"uint16"},{internalType:"address",name:"sender",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct L2Message",name:"_message",type:"tuple"},{internalType:"bytes32[]",name:"_proof",type:"bytes32[]"}],name:"proveL2MessageInclusion",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_contractL2",type:"address"},{internalType:"uint256",name:"_l2Value",type:"uint256"},{internalType:"bytes",name:"_calldata",type:"bytes"},{internalType:"uint256",name:"_l2GasLimit",type:"uint256"},{internalType:"uint256",name:"_l2GasPerPubdataByteLimit",type:"uint256"},{internalType:"bytes[]",name:"_factoryDeps",type:"bytes[]"},{internalType:"address",name:"_refundRecipient",type:"address"}],name:"requestL2Transaction",outputs:[{internalType:"bytes32",name:"canonicalTxHash",type:"bytes32"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"_newLastBlock",type:"uint256"}],name:"revertBlocks",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"_upgradeProposalHash",type:"bytes32"}],name:"securityCouncilUpgradeApprove",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"_l2BootloaderBytecodeHash",type:"bytes32"}],name:"setL2BootloaderBytecodeHash",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"_l2DefaultAccountBytecodeHash",type:"bytes32"}],name:"setL2DefaultAccountBytecodeHash",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_newPendingGovernor",type:"address"}],name:"setPendingGovernor",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_zkPorterIsAvailable",type:"bool"}],name:"setPorterAvailability",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_newPriorityTxMaxGasLimit",type:"uint256"}],name:"setPriorityTxMaxGasLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_validator",type:"address"},{internalType:"bool",name:"_active",type:"bool"}],name:"setValidator",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract Verifier",name:"_newVerifier",type:"address"}],name:"setVerifier",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"recursionNodeLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionLeafLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionCircuitsSetVksHash",type:"bytes32"}],internalType:"struct VerifierParams",name:"_newVerifierParams",type:"tuple"}],name:"setVerifierParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_blockNumber",type:"uint256"}],name:"storedBlockHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"unfreezeDiamond",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"facet",type:"address"},{internalType:"enum Diamond.Action",name:"action",type:"uint8"},{internalType:"bool",name:"isFreezable",type:"bool"},{internalType:"bytes4[]",name:"selectors",type:"bytes4[]"}],internalType:"struct Diamond.FacetCut[]",name:"facetCuts",type:"tuple[]"},{internalType:"address",name:"initAddress",type:"address"},{internalType:"bytes",name:"initCalldata",type:"bytes"}],internalType:"struct Diamond.DiamondCutData",name:"_diamondCut",type:"tuple"},{internalType:"uint256",name:"_proposalId",type:"uint256"},{internalType:"bytes32",name:"_salt",type:"bytes32"}],name:"upgradeProposalHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"}];var Ye={};Object.defineProperty(Ye,"__esModule",{value:!0});Ye.IERC20MetadataFactory=void 0;const Hi=O;class Gi{static connect(e,t){return new Hi.Contract(e,zi,t)}}Ye.IERC20MetadataFactory=Gi;const zi=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];var Ze={};Object.defineProperty(Ze,"__esModule",{value:!0});Ze.IL1BridgeFactory=void 0;const ji=O;class Vi{static connect(e,t){return new ji.Contract(e,$i,t)}}Ze.IL1BridgeFactory=Vi;const $i=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"address",name:"l1Token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ClaimedFailedDeposit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"address",name:"l1Token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"DepositInitiated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"address",name:"l1Token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawalFinalized",type:"event"},{inputs:[{internalType:"address",name:"_depositSender",type:"address"},{internalType:"address",name:"_l1Token",type:"address"},{internalType:"bytes32",name:"_l2TxHash",type:"bytes32"},{internalType:"uint256",name:"_l2BlockNumber",type:"uint256"},{internalType:"uint256",name:"_l2MessageIndex",type:"uint256"},{internalType:"uint16",name:"_l2TxNumberInBlock",type:"uint16"},{internalType:"bytes32[]",name:"_merkleProof",type:"bytes32[]"}],name:"claimFailedDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_l2Receiver",type:"address"},{internalType:"address",name:"_l1Token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_l2TxGasLimit",type:"uint256"},{internalType:"uint256",name:"_l2TxGasPerPubdataByte",type:"uint256"}],name:"deposit",outputs:[{internalType:"bytes32",name:"txHash",type:"bytes32"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"_l2BlockNumber",type:"uint256"},{internalType:"uint256",name:"_l2MessageIndex",type:"uint256"},{internalType:"uint16",name:"_l2TxNumberInBlock",type:"uint16"},{internalType:"bytes",name:"_message",type:"bytes"},{internalType:"bytes32[]",name:"_merkleProof",type:"bytes32[]"}],name:"finalizeWithdrawal",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_l2BlockNumber",type:"uint256"},{internalType:"uint256",name:"_l2MessageIndex",type:"uint256"}],name:"isWithdrawalFinalized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_l1Token",type:"address"}],name:"l2TokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}];var Ke={};Object.defineProperty(Ke,"__esModule",{value:!0});Ke.IL2BridgeFactory=void 0;const qi=O;class Wi{static connect(e,t){return new qi.Contract(e,Yi,t)}}Ke.IL2BridgeFactory=Wi;const Yi=[{inputs:[{internalType:"address",name:"_l1Sender",type:"address"},{internalType:"address",name:"_l2Receiver",type:"address"},{internalType:"address",name:"_l1Token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"finalizeDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_l1Bridge",type:"address"},{internalType:"bytes32",name:"_l2TokenProxyBytecodeHash",type:"bytes32"},{internalType:"address",name:"_governor",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"l1Bridge",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_l2Token",type:"address"}],name:"l1TokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_l1Token",type:"address"}],name:"l2TokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_l1Receiver",type:"address"},{internalType:"address",name:"_l2Token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}];var Je={};Object.defineProperty(Je,"__esModule",{value:!0});Je.IAllowListFactory=void 0;const Zi=O;class Ki{static connect(e,t){return new Zi.Contract(e,Ji,t)}}Je.IAllowListFactory=Ki;const Ji=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"enum IAllowList.AccessMode",name:"previousMode",type:"uint8"},{indexed:!1,internalType:"enum IAllowList.AccessMode",name:"newMode",type:"uint8"}],name:"UpdateAccessMode",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!0,internalType:"bytes4",name:"functionSig",type:"bytes4"},{indexed:!1,internalType:"bool",name:"status",type:"bool"}],name:"UpdateCallPermission",type:"event"},{inputs:[{internalType:"address",name:"_caller",type:"address"},{internalType:"address",name:"_target",type:"address"},{internalType:"bytes4",name:"_functionSig",type:"bytes4"}],name:"canCall",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_target",type:"address"}],name:"getAccessMode",outputs:[{internalType:"enum IAllowList.AccessMode",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_l1Token",type:"address"}],name:"getTokenDepositLimitData",outputs:[{components:[{internalType:"bool",name:"depositLimitation",type:"bool"},{internalType:"uint256",name:"depositCap",type:"uint256"}],internalType:"struct IAllowList.Deposit",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_caller",type:"address"},{internalType:"address",name:"_target",type:"address"},{internalType:"bytes4",name:"_functionSig",type:"bytes4"}],name:"hasSpecialAccessToCall",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_target",type:"address"},{internalType:"enum IAllowList.AccessMode",name:"_accessMode",type:"uint8"}],name:"setAccessMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"_targets",type:"address[]"},{internalType:"enum IAllowList.AccessMode[]",name:"_accessMode",type:"uint8[]"}],name:"setBatchAccessMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"_callers",type:"address[]"},{internalType:"address[]",name:"_targets",type:"address[]"},{internalType:"bytes4[]",name:"_functionSigs",type:"bytes4[]"},{internalType:"bool[]",name:"_enables",type:"bool[]"}],name:"setBatchPermissionToCall",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_l1Token",type:"address"},{internalType:"bool",name:"_depositLimitation",type:"bool"},{internalType:"uint256",name:"_depositCap",type:"uint256"}],name:"setDepositLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_caller",type:"address"},{internalType:"address",name:"_target",type:"address"},{internalType:"bytes4",name:"_functionSig",type:"bytes4"},{internalType:"bool",name:"_enable",type:"bool"}],name:"setPermissionToCall",outputs:[],stateMutability:"nonpayable",type:"function"}];var Xe={};Object.defineProperty(Xe,"__esModule",{value:!0});Xe.IEthTokenFactory=void 0;const Xi=O;class Qi{static connect(e,t){return new Xi.Contract(e,es,t)}}Xe.IEthTokenFactory=Qi;const es=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Mint",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_l1Receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"Withdrawal",type:"event"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"pure",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFromTo",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_l1Receiver",type:"address"}],name:"withdraw",outputs:[],stateMutability:"payable",type:"function"}];(function(n){Object.defineProperty(n,"__esModule",{value:!0}),n.IEthTokenFactory=n.IAllowListFactory=n.IL2BridgeFactory=n.IL1BridgeFactory=n.IERC20MetadataFactory=n.IZkSyncFactory=void 0;var e=We;Object.defineProperty(n,"IZkSyncFactory",{enumerable:!0,get:function(){return e.IZkSyncFactory}});var t=Ye;Object.defineProperty(n,"IERC20MetadataFactory",{enumerable:!0,get:function(){return t.IERC20MetadataFactory}});var a=Ze;Object.defineProperty(n,"IL1BridgeFactory",{enumerable:!0,get:function(){return a.IL1BridgeFactory}});var r=Ke;Object.defineProperty(n,"IL2BridgeFactory",{enumerable:!0,get:function(){return r.IL2BridgeFactory}});var o=Je;Object.defineProperty(n,"IAllowListFactory",{enumerable:!0,get:function(){return o.IAllowListFactory}});var i=Xe;Object.defineProperty(n,"IEthTokenFactory",{enumerable:!0,get:function(){return i.IEthTokenFactory}})})(qe);var jt;function Nn(){if(jt)return re;jt=1,Object.defineProperty(re,"__esModule",{value:!0}),re.AdapterL2=re.AdapterL1=void 0;const n=O,e=qe,t=de();function a(i){return class extends i{_providerL2(){throw new Error("Must be implemented by the derived class!")}_providerL1(){throw new Error("Must be implemented by the derived class!")}_signerL1(){throw new Error("Must be implemented by the derived class!")}async getMainContract(){const u=await this._providerL2().getMainContractAddress();return e.IZkSyncFactory.connect(u,this._signerL1())}async getL1BridgeContracts(){const u=await this._providerL2().getDefaultBridgeAddresses();return{erc20:e.IL1BridgeFactory.connect(u.erc20L1,this._signerL1())}}async getBalanceL1(u,s){return u??(u=t.ETH_ADDRESS),(0,t.isETH)(u)?await this._providerL1().getBalance(await this.getAddress(),s):await e.IERC20MetadataFactory.connect(u,this._providerL1()).balanceOf(await this.getAddress())}async l2TokenAddress(u){return u==t.ETH_ADDRESS?t.ETH_ADDRESS:await(await this.getL1BridgeContracts()).erc20.l2TokenAddress(u)}async approveERC20(u,s,l){if((0,t.isETH)(u))throw new Error("ETH token can't be approved. The address of the token does not exist on L1.");let c=l==null?void 0:l.bridgeAddress;const m=e.IERC20MetadataFactory.connect(u,this._signerL1());return c==null?c=(await this._providerL2().getDefaultBridgeAddresses()).erc20L1:delete l.bridgeAddress,await m.approve(c,s,l)}async getBaseCost(u){var s,l;const c=await this.getMainContract(),m={...(0,t.layer1TxDefaults)(),...u};return(s=m.gasPrice)!==null&&s!==void 0||(m.gasPrice=await this._providerL1().getGasPrice()),(l=m.gasPerPubdataByte)!==null&&l!==void 0||(m.gasPerPubdataByte=t.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT),n.BigNumber.from(await c.l2TransactionBaseCost(m.gasPrice,m.gasLimit,m.gasPerPubdataByte))}async deposit(u){var s;const l=await this.getDepositTx(u);if(u.token==t.ETH_ADDRESS)return this.requestExecute(l);{const c=await this.getL1BridgeContracts();return u.approveERC20&&await(await this.approveERC20(u.token,u.amount,{bridgeAddress:(s=u.bridgeAddress)!==null&&s!==void 0?s:c.erc20.address,...u.approveOverrides})).wait(),await this._providerL2().getPriorityOpResponse(await this._signerL1().sendTransaction(l))}}async estimateGasDeposit(u){const s=await this.getDepositTx(u);return u.token==t.ETH_ADDRESS?await this.estimateGasRequestExecute(s):await this._providerL1().estimateGas(s)}async getDepositTx(u){var s,l,c,m,y,b,P;const L=await this.getL1BridgeContracts();u.bridgeAddress&&L.erc20.attach(u.bridgeAddress);const{...v}=u;(s=v.to)!==null&&s!==void 0||(v.to=await this.getAddress()),(l=v.operatorTip)!==null&&l!==void 0||(v.operatorTip=n.BigNumber.from(0)),(c=v.overrides)!==null&&c!==void 0||(v.overrides={}),(m=v.gasPerPubdataByte)!==null&&m!==void 0||(v.gasPerPubdataByte=t.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT),(y=v.l2GasLimit)!==null&&y!==void 0||(v.l2GasLimit=await(0,t.estimateDefaultBridgeDepositL2Gas)(this._providerL1(),this._providerL2(),v.token,v.amount,v.to,await this.getAddress(),v.gasPerPubdataByte));const{to:B,token:U,amount:H,operatorTip:X,overrides:N}=v;await o(this._providerL1(),N);const ue=N.maxFeePerGas||N.gasPrice,G=await(await this.getMainContract()).l2TransactionBaseCost(await ue,v.l2GasLimit,v.gasPerPubdataByte);if(U==t.ETH_ADDRESS)return(b=N.value)!==null&&b!==void 0||(N.value=G.add(X).add(H)),{contractAddress:B,calldata:"0x",l2Value:H,l2GasLimit:v.l2GasLimit,...v};{const le=[B,U,H,v.l2GasLimit,v.gasPerPubdataByte];return(P=N.value)!==null&&P!==void 0||(N.value=G.add(X)),await(0,t.checkBaseCost)(G,N.value),await L.erc20.populateTransaction.deposit(...le,N)}}async _getWithdrawalLog(u,s=0){const l=n.ethers.utils.hexlify(u),c=await this._providerL2().getTransactionReceipt(l);return{log:c.logs.filter(y=>y.address==t.L1_MESSENGER_ADDRESS&&y.topics[0]==n.ethers.utils.id("L1MessageSent(address,bytes32,bytes)"))[s],l1BatchTxId:c.l1BatchTxIndex}}async _getWithdrawalL2ToL1Log(u,s=0){const l=n.ethers.utils.hexlify(u),c=await this._providerL2().getTransactionReceipt(l),m=Array.from(c.l2ToL1Logs.entries()).filter(([P,L])=>L.sender==t.L1_MESSENGER_ADDRESS),[y,b]=m[s];return{l2ToL1LogIndex:y,l2ToL1Log:b}}async finalizeWithdrawalParams(u,s=0){const{log:l,l1BatchTxId:c}=await this._getWithdrawalLog(u,s),{l2ToL1LogIndex:m}=await this._getWithdrawalL2ToL1Log(u,s),y=n.ethers.utils.hexDataSlice(l.topics[1],12),b=await this._providerL2().getLogProof(u,m),P=n.ethers.utils.defaultAbiCoder.decode(["bytes"],l.data)[0];return{l1BatchNumber:l.l1BatchNumber,l2MessageIndex:b.id,l2TxNumberInBlock:c,message:P,sender:y,proof:b.proof}}async finalizeWithdrawal(u,s=0,l){const{l1BatchNumber:c,l2MessageIndex:m,l2TxNumberInBlock:y,message:b,sender:P,proof:L}=await this.finalizeWithdrawalParams(u,s);if((0,t.isETH)(P)){const U=await this._providerL2().getMainContractAddress();return await e.IZkSyncFactory.connect(U,this._signerL1()).finalizeEthWithdrawal(c,m,y,b,L,l??{})}const v=e.IL2BridgeFactory.connect(P,this._providerL2());return await e.IL1BridgeFactory.connect(await v.l1Bridge(),this._signerL1()).finalizeWithdrawal(c,m,y,b,L,l??{})}async isWithdrawalFinalized(u,s=0){const{log:l}=await this._getWithdrawalLog(u,s),{l2ToL1LogIndex:c}=await this._getWithdrawalL2ToL1Log(u,s),m=n.ethers.utils.hexDataSlice(l.topics[1],12),y=await this._providerL2().getLogProof(u,c);if((0,t.isETH)(m)){const L=await this._providerL2().getMainContractAddress();return await e.IZkSyncFactory.connect(L,this._signerL1()).isEthWithdrawalFinalized(l.l1BatchNumber,y.id)}const b=e.IL2BridgeFactory.connect(m,this._providerL2());return await e.IL1BridgeFactory.connect(await b.l1Bridge(),this._providerL1()).isWithdrawalFinalized(l.l1BatchNumber,y.id)}async claimFailedDeposit(u,s){const l=await this._providerL2().getTransactionReceipt(n.ethers.utils.hexlify(u)),c=l.l2ToL1Logs.findIndex(H=>H.sender==t.BOOTLOADER_FORMAL_ADDRESS&&H.key==u);if(l.l2ToL1Logs[c].value!=n.ethers.constants.HashZero)throw new Error("Cannot claim successful deposit");const y=await this._providerL2().getTransaction(n.ethers.utils.hexlify(u)),b=(0,t.undoL1ToL2Alias)(l.from),P=l.to,L=e.IL1BridgeFactory.connect(b,this._signerL1()),B=e.IL2BridgeFactory.connect(P,this._providerL2()).interface.decodeFunctionData("finalizeDeposit",y.data),U=await this._providerL2().getLogProof(u,c);return await L.claimFailedDeposit(B._l1Sender,B._l1Token,u,l.l1BatchNumber,U.id,l.l1BatchTxIndex,U.proof,s??{})}async requestExecute(u){const s=await this.getRequestExecuteTx(u);return this._providerL2().getPriorityOpResponse(await this._signerL1().sendTransaction(s))}async estimateGasRequestExecute(u){const s=await this.getRequestExecuteTx(u);return this._providerL1().estimateGas(s)}async getRequestExecuteTx(u){var s,l,c,m,y,b,P,L;const v=await this.getMainContract(),{...B}=u;(s=B.l2Value)!==null&&s!==void 0||(B.l2Value=n.BigNumber.from(0)),(l=B.operatorTip)!==null&&l!==void 0||(B.operatorTip=n.BigNumber.from(0)),(c=B.factoryDeps)!==null&&c!==void 0||(B.factoryDeps=[]),(m=B.overrides)!==null&&m!==void 0||(B.overrides={}),(y=B.gasPerPubdataByte)!==null&&y!==void 0||(B.gasPerPubdataByte=t.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT),(b=B.refundRecipient)!==null&&b!==void 0||(B.refundRecipient=await this.getAddress()),(P=B.l2GasLimit)!==null&&P!==void 0||(B.l2GasLimit=await this._providerL2().estimateL1ToL2Execute(u));const{contractAddress:U,l2Value:H,calldata:X,l2GasLimit:N,factoryDeps:ue,operatorTip:Ae,overrides:G,gasPerPubdataByte:le,refundRecipient:tt}=B;await o(this._providerL1(),G);const nt=G.maxFeePerGas||G.gasPrice,me=await this.getBaseCost({gasPrice:await nt,gasPerPubdataByte:le,gasLimit:N});return(L=G.value)!==null&&L!==void 0||(G.value=me.add(Ae).add(H)),await(0,t.checkBaseCost)(me,G.value),await v.populateTransaction.requestL2Transaction(U,H,X,N,t.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT,ue,tt,G)}}}re.AdapterL1=a;function r(i){return class extends i{_providerL2(){throw new Error("Must be implemented by the derived class!")}_signerL2(){throw new Error("Must be implemented by the derived class!")}async getBalance(u,s="committed"){return await this._providerL2().getBalance(await this.getAddress(),s,u)}async getAllBalances(){return await this._providerL2().getAllAccountBalances(await this.getAddress())}async getL2BridgeContracts(){const u=await this._providerL2().getDefaultBridgeAddresses();return{erc20:e.IL2BridgeFactory.connect(u.erc20L2,this._signerL2())}}_fillCustomData(u){var s,l;const c={...u};return(s=c.gasPerPubdata)!==null&&s!==void 0||(c.gasPerPubdata=t.DEFAULT_GAS_PER_PUBDATA_LIMIT),(l=c.factoryDeps)!==null&&l!==void 0||(c.factoryDeps=[]),c}async withdraw(u){const s=await this._providerL2().getWithdrawTx({from:await this.getAddress(),...u}),l=await this.sendTransaction(s);return this._providerL2()._wrapTransaction(l)}async transfer(u){const s=await this._providerL2().getTransferTx({from:await this.getAddress(),...u}),l=await this.sendTransaction(s);return this._providerL2()._wrapTransaction(l)}}}re.AdapterL2=r;async function o(i,p){if(!p.gasPrice&&!p.maxFeePerGas){const u=await i.getFeeData(),l=(u.lastBaseFeePerGas||u.gasPrice).mul(3).div(2).add(u.maxPriorityFeePerGas);p.maxFeePerGas=l,p.maxPriorityFeePerGas=u.maxPriorityFeePerGas}}return re}var Vt;function Qe(){return Vt||(Vt=1,function(n){Object.defineProperty(n,"__esModule",{value:!0}),n.L1Signer=n.Signer=n.EIP712Signer=n.eip712Types=void 0;const e=O,t=de(),a=Wr,r=Nn();n.eip712Types={Transaction:[{name:"txType",type:"uint256"},{name:"from",type:"uint256"},{name:"to",type:"uint256"},{name:"gasLimit",type:"uint256"},{name:"gasPerPubdataByteLimit",type:"uint256"},{name:"maxFeePerGas",type:"uint256"},{name:"maxPriorityFeePerGas",type:"uint256"},{name:"paymaster",type:"uint256"},{name:"nonce",type:"uint256"},{name:"value",type:"uint256"},{name:"data",type:"bytes"},{name:"factoryDeps",type:"bytes32[]"},{name:"paymasterInput",type:"bytes"}]};class o{constructor(s,l){this.ethSigner=s,this.eip712Domain=Promise.resolve(l).then(c=>({name:"zkSync",version:"2",chainId:c}))}static getSignInput(s){var l,c,m,y,b,P,L;const v=s.maxFeePerGas||s.gasPrice,B=s.maxPriorityFeePerGas||v,U=((l=s.customData)===null||l===void 0?void 0:l.gasPerPubdata)||t.DEFAULT_GAS_PER_PUBDATA_LIMIT;return{txType:s.type,from:s.from,to:s.to,gasLimit:s.gasLimit,gasPerPubdataByteLimit:U,maxFeePerGas:v,maxPriorityFeePerGas:B,paymaster:((m=(c=s.customData)===null||c===void 0?void 0:c.paymasterParams)===null||m===void 0?void 0:m.paymaster)||e.ethers.constants.AddressZero,nonce:s.nonce,value:s.value,data:s.data,factoryDeps:((b=(y=s.customData)===null||y===void 0?void 0:y.factoryDeps)===null||b===void 0?void 0:b.map(X=>(0,t.hashBytecode)(X)))||[],paymasterInput:((L=(P=s.customData)===null||P===void 0?void 0:P.paymasterParams)===null||L===void 0?void 0:L.paymasterInput)||"0x"}}async sign(s){return await this.ethSigner._signTypedData(await this.eip712Domain,n.eip712Types,o.getSignInput(s))}static getSignedDigest(s){if(!s.chainId)throw Error("Transaction chainId isn't set");const l={name:"zkSync",version:"2",chainId:s.chainId};return a._TypedDataEncoder.hash(l,n.eip712Types,o.getSignInput(s))}}n.EIP712Signer=o;class i extends(0,r.AdapterL2)(e.ethers.providers.JsonRpcSigner){_signerL2(){return this}_providerL2(){return this.provider}static from(s){const l=Object.setPrototypeOf(s,i.prototype);return l.eip712=new o(l,l.getChainId()),l}async getNonce(s){return await this.getTransactionCount(s)}async sendTransaction(s){var l,c,m,y,b,P,L;if(s.customData==null&&s.type==null&&(s.type=0),s.customData==null&&s.type!=t.EIP712_TX_TYPE)return await super.sendTransaction(s);{const v=await this.getAddress();if((l=s.from)!==null&&l!==void 0||(s.from=v),s.from.toLowerCase()!=v.toLowerCase())throw new Error("Transaction `from` address mismatch");s.type=t.EIP712_TX_TYPE,(c=s.value)!==null&&c!==void 0||(s.value=0),(m=s.data)!==null&&m!==void 0||(s.data="0x"),(y=s.nonce)!==null&&y!==void 0||(s.nonce=await this.getNonce()),s.customData=this._fillCustomData(s.customData),(b=s.gasPrice)!==null&&b!==void 0||(s.gasPrice=await this.provider.getGasPrice()),(P=s.gasLimit)!==null&&P!==void 0||(s.gasLimit=await this.provider.estimateGas(s)),(L=s.chainId)!==null&&L!==void 0||(s.chainId=(await this.provider.getNetwork()).chainId),s.customData.customSignature=await this.eip712.sign(s);const B=(0,t.serialize)(s);return await this.provider.sendTransaction(B)}}}n.Signer=i;class p extends(0,r.AdapterL1)(e.ethers.providers.JsonRpcSigner){_providerL2(){return this.providerL2}_providerL1(){return this.provider}_signerL1(){return this}static from(s,l){const c=Object.setPrototypeOf(s,p.prototype);return c.providerL2=l,c}connectToL2(s){return this.providerL2=s,this}}n.L1Signer=p}(ot)),ot}var Fn={};const ts=[{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_minAllowance",type:"uint256"},{internalType:"bytes",name:"_innerInput",type:"bytes"}],name:"approvalBased",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes",name:"input",type:"bytes"}],name:"general",outputs:[],stateMutability:"nonpayable",type:"function"}],ns={abi:ts};(function(n){Object.defineProperty(n,"__esModule",{value:!0}),n.getPaymasterParams=n.getGeneralPaymasterInput=n.getApprovalBasedPaymasterInput=n.IPaymasterFlow=void 0;const e=O;n.IPaymasterFlow=new e.ethers.utils.Interface(ns.abi);function t(o){return n.IPaymasterFlow.encodeFunctionData("approvalBased",[o.token,o.minimalAllowance,o.innerInput])}n.getApprovalBasedPaymasterInput=t;function a(o){return n.IPaymasterFlow.encodeFunctionData("general",[o.innerInput])}n.getGeneralPaymasterInput=a;function r(o,i){return i.type=="General"?{paymaster:o,paymasterInput:a(i)}:{paymaster:o,paymasterInput:t(i)}}n.getPaymasterParams=r})(Fn);const as=[{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"blockNumber",type:"uint256"},{indexed:!0,internalType:"bytes32",name:"blockHash",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"commitment",type:"bytes32"}],name:"BlockCommit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"blockNumber",type:"uint256"},{indexed:!0,internalType:"bytes32",name:"blockHash",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"commitment",type:"bytes32"}],name:"BlockExecution",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"totalBlocksCommitted",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBlocksVerified",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalBlocksExecuted",type:"uint256"}],name:"BlocksRevert",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"previousLastVerifiedBlock",type:"uint256"},{indexed:!0,internalType:"uint256",name:"currentLastVerifiedBlock",type:"uint256"}],name:"BlocksVerification",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!0,internalType:"bytes32",name:"proposalHash",type:"bytes32"}],name:"CancelUpgradeProposal",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"EthWithdrawalFinalized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!0,internalType:"bytes32",name:"proposalHash",type:"bytes32"},{indexed:!1,internalType:"bytes32",name:"proposalSalt",type:"bytes32"}],name:"ExecuteUpgrade",type:"event"},{anonymous:!1,inputs:[],name:"Freeze",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"isPorterAvailable",type:"bool"}],name:"IsPorterAvailableStatusUpdate",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldGovernor",type:"address"},{indexed:!0,internalType:"address",name:"newGovernor",type:"address"}],name:"NewGovernor",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"previousBytecodeHash",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newBytecodeHash",type:"bytes32"}],name:"NewL2BootloaderBytecodeHash",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"previousBytecodeHash",type:"bytes32"},{indexed:!0,internalType:"bytes32",name:"newBytecodeHash",type:"bytes32"}],name:"NewL2DefaultAccountBytecodeHash",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldPendingGovernor",type:"address"},{indexed:!0,internalType:"address",name:"newPendingGovernor",type:"address"}],name:"NewPendingGovernor",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"txId",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!1,internalType:"uint64",name:"expirationTimestamp",type:"uint64"},{components:[{internalType:"uint256",name:"txType",type:"uint256"},{internalType:"uint256",name:"from",type:"uint256"},{internalType:"uint256",name:"to",type:"uint256"},{internalType:"uint256",name:"gasLimit",type:"uint256"},{internalType:"uint256",name:"gasPerPubdataByteLimit",type:"uint256"},{internalType:"uint256",name:"maxFeePerGas",type:"uint256"},{internalType:"uint256",name:"maxPriorityFeePerGas",type:"uint256"},{internalType:"uint256",name:"paymaster",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256[4]",name:"reserved",type:"uint256[4]"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"signature",type:"bytes"},{internalType:"uint256[]",name:"factoryDeps",type:"uint256[]"},{internalType:"bytes",name:"paymasterInput",type:"bytes"},{internalType:"bytes",name:"reservedDynamic",type:"bytes"}],indexed:!1,internalType:"struct IMailbox.L2CanonicalTransaction",name:"transaction",type:"tuple"},{indexed:!1,internalType:"bytes[]",name:"factoryDeps",type:"bytes[]"}],name:"NewPriorityRequest",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldPriorityTxMaxGasLimit",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newPriorityTxMaxGasLimit",type:"uint256"}],name:"NewPriorityTxMaxGasLimit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"oldVerifier",type:"address"},{indexed:!0,internalType:"address",name:"newVerifier",type:"address"}],name:"NewVerifier",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"bytes32",name:"recursionNodeLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionLeafLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionCircuitsSetVksHash",type:"bytes32"}],indexed:!1,internalType:"struct VerifierParams",name:"oldVerifierParams",type:"tuple"},{components:[{internalType:"bytes32",name:"recursionNodeLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionLeafLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionCircuitsSetVksHash",type:"bytes32"}],indexed:!1,internalType:"struct VerifierParams",name:"newVerifierParams",type:"tuple"}],name:"NewVerifierParams",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!0,internalType:"bytes32",name:"proposalHash",type:"bytes32"}],name:"ProposeShadowUpgrade",type:"event"},{anonymous:!1,inputs:[{components:[{components:[{internalType:"address",name:"facet",type:"address"},{internalType:"enum Diamond.Action",name:"action",type:"uint8"},{internalType:"bool",name:"isFreezable",type:"bool"},{internalType:"bytes4[]",name:"selectors",type:"bytes4[]"}],internalType:"struct Diamond.FacetCut[]",name:"facetCuts",type:"tuple[]"},{internalType:"address",name:"initAddress",type:"address"},{internalType:"bytes",name:"initCalldata",type:"bytes"}],indexed:!1,internalType:"struct Diamond.DiamondCutData",name:"diamondCut",type:"tuple"},{indexed:!0,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"bytes32",name:"proposalSalt",type:"bytes32"}],name:"ProposeTransparentUpgrade",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!0,internalType:"bytes32",name:"proposalHash",type:"bytes32"}],name:"SecurityCouncilUpgradeApprove",type:"event"},{anonymous:!1,inputs:[],name:"Unfreeze",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"validatorAddress",type:"address"},{indexed:!1,internalType:"bool",name:"isActive",type:"bool"}],name:"ValidatorStatusUpdate",type:"event"},{inputs:[],name:"acceptGovernor",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"_proposedUpgradeHash",type:"bytes32"}],name:"cancelUpgradeProposal",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint64",name:"blockNumber",type:"uint64"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{internalType:"uint64",name:"indexRepeatedStorageChanges",type:"uint64"},{internalType:"uint256",name:"numberOfLayer1Txs",type:"uint256"},{internalType:"bytes32",name:"priorityOperationsHash",type:"bytes32"},{internalType:"bytes32",name:"l2LogsTreeRoot",type:"bytes32"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"bytes32",name:"commitment",type:"bytes32"}],internalType:"struct IExecutor.StoredBlockInfo",name:"_lastCommittedBlockData",type:"tuple"},{components:[{internalType:"uint64",name:"blockNumber",type:"uint64"},{internalType:"uint64",name:"timestamp",type:"uint64"},{internalType:"uint64",name:"indexRepeatedStorageChanges",type:"uint64"},{internalType:"bytes32",name:"newStateRoot",type:"bytes32"},{internalType:"uint256",name:"numberOfLayer1Txs",type:"uint256"},{internalType:"bytes32",name:"l2LogsTreeRoot",type:"bytes32"},{internalType:"bytes32",name:"priorityOperationsHash",type:"bytes32"},{internalType:"bytes",name:"initialStorageChanges",type:"bytes"},{internalType:"bytes",name:"repeatedStorageChanges",type:"bytes"},{internalType:"bytes",name:"l2Logs",type:"bytes"},{internalType:"bytes[]",name:"l2ArbitraryLengthMessages",type:"bytes[]"},{internalType:"bytes[]",name:"factoryDeps",type:"bytes[]"}],internalType:"struct IExecutor.CommitBlockInfo[]",name:"_newBlocksData",type:"tuple[]"}],name:"commitBlocks",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint64",name:"blockNumber",type:"uint64"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{internalType:"uint64",name:"indexRepeatedStorageChanges",type:"uint64"},{internalType:"uint256",name:"numberOfLayer1Txs",type:"uint256"},{internalType:"bytes32",name:"priorityOperationsHash",type:"bytes32"},{internalType:"bytes32",name:"l2LogsTreeRoot",type:"bytes32"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"bytes32",name:"commitment",type:"bytes32"}],internalType:"struct IExecutor.StoredBlockInfo[]",name:"_blocksData",type:"tuple[]"}],name:"executeBlocks",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"facet",type:"address"},{internalType:"enum Diamond.Action",name:"action",type:"uint8"},{internalType:"bool",name:"isFreezable",type:"bool"},{internalType:"bytes4[]",name:"selectors",type:"bytes4[]"}],internalType:"struct Diamond.FacetCut[]",name:"facetCuts",type:"tuple[]"},{internalType:"address",name:"initAddress",type:"address"},{internalType:"bytes",name:"initCalldata",type:"bytes"}],internalType:"struct Diamond.DiamondCutData",name:"_diamondCut",type:"tuple"},{internalType:"bytes32",name:"_proposalSalt",type:"bytes32"}],name:"executeUpgrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"_selector",type:"bytes4"}],name:"facetAddress",outputs:[{internalType:"address",name:"facet",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"facetAddresses",outputs:[{internalType:"address[]",name:"facets",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_facet",type:"address"}],name:"facetFunctionSelectors",outputs:[{internalType:"bytes4[]",name:"",type:"bytes4[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"facets",outputs:[{components:[{internalType:"address",name:"addr",type:"address"},{internalType:"bytes4[]",name:"selectors",type:"bytes4[]"}],internalType:"struct IGetters.Facet[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_l2BlockNumber",type:"uint256"},{internalType:"uint256",name:"_l2MessageIndex",type:"uint256"},{internalType:"uint16",name:"_l2TxNumberInBlock",type:"uint16"},{internalType:"bytes",name:"_message",type:"bytes"},{internalType:"bytes32[]",name:"_merkleProof",type:"bytes32[]"}],name:"finalizeEthWithdrawal",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"freezeDiamond",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getCurrentProposalId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getFirstUnprocessedPriorityTx",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGovernor",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getL2BootloaderBytecodeHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getL2DefaultAccountBytecodeHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPendingGovernor",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPriorityQueueSize",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProposedUpgradeHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProposedUpgradeTimestamp",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSecurityCouncil",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalBlocksCommitted",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalBlocksExecuted",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalBlocksVerified",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalPriorityTxs",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getUpgradeProposalState",outputs:[{internalType:"enum UpgradeState",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVerifier",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVerifierParams",outputs:[{components:[{internalType:"bytes32",name:"recursionNodeLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionLeafLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionCircuitsSetVksHash",type:"bytes32"}],internalType:"struct VerifierParams",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getpriorityTxMaxGasLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"isApprovedBySecurityCouncil",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDiamondStorageFrozen",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_l2BlockNumber",type:"uint256"},{internalType:"uint256",name:"_l2MessageIndex",type:"uint256"}],name:"isEthWithdrawalFinalized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_facet",type:"address"}],name:"isFacetFreezable",outputs:[{internalType:"bool",name:"isFreezable",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"_selector",type:"bytes4"}],name:"isFunctionFreezable",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_address",type:"address"}],name:"isValidator",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_blockNumber",type:"uint256"}],name:"l2LogsRootHash",outputs:[{internalType:"bytes32",name:"hash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_gasPrice",type:"uint256"},{internalType:"uint256",name:"_l2GasLimit",type:"uint256"},{internalType:"uint256",name:"_l2GasPerPubdataByteLimit",type:"uint256"}],name:"l2TransactionBaseCost",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"priorityQueueFrontOperation",outputs:[{components:[{internalType:"bytes32",name:"canonicalTxHash",type:"bytes32"},{internalType:"uint64",name:"expirationTimestamp",type:"uint64"},{internalType:"uint192",name:"layer2Tip",type:"uint192"}],internalType:"struct PriorityOperation",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"_proposalHash",type:"bytes32"},{internalType:"uint40",name:"_proposalId",type:"uint40"}],name:"proposeShadowUpgrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"facet",type:"address"},{internalType:"enum Diamond.Action",name:"action",type:"uint8"},{internalType:"bool",name:"isFreezable",type:"bool"},{internalType:"bytes4[]",name:"selectors",type:"bytes4[]"}],internalType:"struct Diamond.FacetCut[]",name:"facetCuts",type:"tuple[]"},{internalType:"address",name:"initAddress",type:"address"},{internalType:"bytes",name:"initCalldata",type:"bytes"}],internalType:"struct Diamond.DiamondCutData",name:"_diamondCut",type:"tuple"},{internalType:"uint40",name:"_proposalId",type:"uint40"}],name:"proposeTransparentUpgrade",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint64",name:"blockNumber",type:"uint64"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{internalType:"uint64",name:"indexRepeatedStorageChanges",type:"uint64"},{internalType:"uint256",name:"numberOfLayer1Txs",type:"uint256"},{internalType:"bytes32",name:"priorityOperationsHash",type:"bytes32"},{internalType:"bytes32",name:"l2LogsTreeRoot",type:"bytes32"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"bytes32",name:"commitment",type:"bytes32"}],internalType:"struct IExecutor.StoredBlockInfo",name:"_prevBlock",type:"tuple"},{components:[{internalType:"uint64",name:"blockNumber",type:"uint64"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{internalType:"uint64",name:"indexRepeatedStorageChanges",type:"uint64"},{internalType:"uint256",name:"numberOfLayer1Txs",type:"uint256"},{internalType:"bytes32",name:"priorityOperationsHash",type:"bytes32"},{internalType:"bytes32",name:"l2LogsTreeRoot",type:"bytes32"},{internalType:"uint256",name:"timestamp",type:"uint256"},{internalType:"bytes32",name:"commitment",type:"bytes32"}],internalType:"struct IExecutor.StoredBlockInfo[]",name:"_committedBlocks",type:"tuple[]"},{components:[{internalType:"uint256[]",name:"recursiveAggregationInput",type:"uint256[]"},{internalType:"uint256[]",name:"serializedProof",type:"uint256[]"}],internalType:"struct IExecutor.ProofInput",name:"_proof",type:"tuple"}],name:"proveBlocks",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"_l2TxHash",type:"bytes32"},{internalType:"uint256",name:"_l2BlockNumber",type:"uint256"},{internalType:"uint256",name:"_l2MessageIndex",type:"uint256"},{internalType:"uint16",name:"_l2TxNumberInBlock",type:"uint16"},{internalType:"bytes32[]",name:"_merkleProof",type:"bytes32[]"},{internalType:"enum TxStatus",name:"_status",type:"uint8"}],name:"proveL1ToL2TransactionStatus",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_blockNumber",type:"uint256"},{internalType:"uint256",name:"_index",type:"uint256"},{components:[{internalType:"uint8",name:"l2ShardId",type:"uint8"},{internalType:"bool",name:"isService",type:"bool"},{internalType:"uint16",name:"txNumberInBlock",type:"uint16"},{internalType:"address",name:"sender",type:"address"},{internalType:"bytes32",name:"key",type:"bytes32"},{internalType:"bytes32",name:"value",type:"bytes32"}],internalType:"struct L2Log",name:"_log",type:"tuple"},{internalType:"bytes32[]",name:"_proof",type:"bytes32[]"}],name:"proveL2LogInclusion",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_blockNumber",type:"uint256"},{internalType:"uint256",name:"_index",type:"uint256"},{components:[{internalType:"uint16",name:"txNumberInBlock",type:"uint16"},{internalType:"address",name:"sender",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],internalType:"struct L2Message",name:"_message",type:"tuple"},{internalType:"bytes32[]",name:"_proof",type:"bytes32[]"}],name:"proveL2MessageInclusion",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_contractL2",type:"address"},{internalType:"uint256",name:"_l2Value",type:"uint256"},{internalType:"bytes",name:"_calldata",type:"bytes"},{internalType:"uint256",name:"_l2GasLimit",type:"uint256"},{internalType:"uint256",name:"_l2GasPerPubdataByteLimit",type:"uint256"},{internalType:"bytes[]",name:"_factoryDeps",type:"bytes[]"},{internalType:"address",name:"_refundRecipient",type:"address"}],name:"requestL2Transaction",outputs:[{internalType:"bytes32",name:"canonicalTxHash",type:"bytes32"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"_newLastBlock",type:"uint256"}],name:"revertBlocks",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"_upgradeProposalHash",type:"bytes32"}],name:"securityCouncilUpgradeApprove",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"_l2BootloaderBytecodeHash",type:"bytes32"}],name:"setL2BootloaderBytecodeHash",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"_l2DefaultAccountBytecodeHash",type:"bytes32"}],name:"setL2DefaultAccountBytecodeHash",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_newPendingGovernor",type:"address"}],name:"setPendingGovernor",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_zkPorterIsAvailable",type:"bool"}],name:"setPorterAvailability",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_newPriorityTxMaxGasLimit",type:"uint256"}],name:"setPriorityTxMaxGasLimit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_validator",type:"address"},{internalType:"bool",name:"_active",type:"bool"}],name:"setValidator",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract Verifier",name:"_newVerifier",type:"address"}],name:"setVerifier",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"recursionNodeLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionLeafLevelVkHash",type:"bytes32"},{internalType:"bytes32",name:"recursionCircuitsSetVksHash",type:"bytes32"}],internalType:"struct VerifierParams",name:"_newVerifierParams",type:"tuple"}],name:"setVerifierParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_blockNumber",type:"uint256"}],name:"storedBlockHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"unfreezeDiamond",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"facet",type:"address"},{internalType:"enum Diamond.Action",name:"action",type:"uint8"},{internalType:"bool",name:"isFreezable",type:"bool"},{internalType:"bytes4[]",name:"selectors",type:"bytes4[]"}],internalType:"struct Diamond.FacetCut[]",name:"facetCuts",type:"tuple[]"},{internalType:"address",name:"initAddress",type:"address"},{internalType:"bytes",name:"initCalldata",type:"bytes"}],internalType:"struct Diamond.DiamondCutData",name:"_diamondCut",type:"tuple"},{internalType:"uint256",name:"_proposalId",type:"uint256"},{internalType:"bytes32",name:"_salt",type:"bytes32"}],name:"upgradeProposalHash",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"}],rs={abi:as},is=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"accountAddress",type:"address"},{indexed:!1,internalType:"enum IContractDeployer.AccountNonceOrdering",name:"nonceOrdering",type:"uint8"}],name:"AccountNonceOrderingUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"accountAddress",type:"address"},{indexed:!1,internalType:"enum IContractDeployer.AccountAbstractionVersion",name:"aaVersion",type:"uint8"}],name:"AccountVersionUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"deployerAddress",type:"address"},{indexed:!0,internalType:"bytes32",name:"bytecodeHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"contractAddress",type:"address"}],name:"ContractDeployed",type:"event"},{inputs:[{internalType:"bytes32",name:"_salt",type:"bytes32"},{internalType:"bytes32",name:"_bytecodeHash",type:"bytes32"},{internalType:"bytes",name:"_input",type:"bytes"}],name:"create",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"_salt",type:"bytes32"},{internalType:"bytes32",name:"_bytecodeHash",type:"bytes32"},{internalType:"bytes",name:"_input",type:"bytes"}],name:"create2",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"_salt",type:"bytes32"},{internalType:"bytes32",name:"_bytecodeHash",type:"bytes32"},{internalType:"bytes",name:"_input",type:"bytes"},{internalType:"enum IContractDeployer.AccountAbstractionVersion",name:"_aaVersion",type:"uint8"}],name:"create2Account",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"bytes32",name:"_bytecodeHash",type:"bytes32"},{internalType:"bytes",name:"_input",type:"bytes"},{internalType:"enum IContractDeployer.AccountAbstractionVersion",name:"_aaVersion",type:"uint8"}],name:"createAccount",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"_address",type:"address"}],name:"extendedAccountVersion",outputs:[{internalType:"enum IContractDeployer.AccountAbstractionVersion",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"bytecodeHash",type:"bytes32"},{internalType:"address",name:"newAddress",type:"address"},{internalType:"bool",name:"callConstructor",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"input",type:"bytes"}],internalType:"struct ContractDeployer.ForceDeployment",name:"_deployment",type:"tuple"},{internalType:"address",name:"_sender",type:"address"}],name:"forceDeployOnAddress",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"bytecodeHash",type:"bytes32"},{internalType:"address",name:"newAddress",type:"address"},{internalType:"bool",name:"callConstructor",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"input",type:"bytes"}],internalType:"struct ContractDeployer.ForceDeployment[]",name:"_deployments",type:"tuple[]"}],name:"forceDeployOnAddresses",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"_address",type:"address"}],name:"getAccountInfo",outputs:[{components:[{internalType:"enum IContractDeployer.AccountAbstractionVersion",name:"supportedAAVersion",type:"uint8"},{internalType:"enum IContractDeployer.AccountNonceOrdering",name:"nonceOrdering",type:"uint8"}],internalType:"struct IContractDeployer.AccountInfo",name:"info",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_senderNonce",type:"uint256"}],name:"getNewAddressCreate",outputs:[{internalType:"address",name:"newAddress",type:"address"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"bytes32",name:"_bytecodeHash",type:"bytes32"},{internalType:"bytes32",name:"_salt",type:"bytes32"},{internalType:"bytes",name:"_input",type:"bytes"}],name:"getNewAddressCreate2",outputs:[{internalType:"address",name:"newAddress",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum IContractDeployer.AccountAbstractionVersion",name:"_version",type:"uint8"}],name:"updateAccountVersion",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IContractDeployer.AccountNonceOrdering",name:"_nonceOrdering",type:"uint8"}],name:"updateNonceOrdering",outputs:[],stateMutability:"nonpayable",type:"function"}],ss={abi:is},os=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_sender",type:"address"},{indexed:!0,internalType:"bytes32",name:"_hash",type:"bytes32"},{indexed:!1,internalType:"bytes",name:"_message",type:"bytes"}],name:"L1MessageSent",type:"event"},{inputs:[{internalType:"bytes",name:"_message",type:"bytes"}],name:"sendToL1",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"}],us={abi:os},ls=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],ps={abi:ls},cs=[{inputs:[{internalType:"bytes32",name:"hash",type:"bytes32"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"isValidSignature",outputs:[{internalType:"bytes4",name:"magicValue",type:"bytes4"}],stateMutability:"view",type:"function"}],ys={abi:cs},ds=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"address",name:"l1Token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ClaimedFailedDeposit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"address",name:"l1Token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"DepositInitiated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"address",name:"l1Token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawalFinalized",type:"event"},{inputs:[{internalType:"address",name:"_depositSender",type:"address"},{internalType:"address",name:"_l1Token",type:"address"},{internalType:"bytes32",name:"_l2TxHash",type:"bytes32"},{internalType:"uint256",name:"_l2BlockNumber",type:"uint256"},{internalType:"uint256",name:"_l2MessageIndex",type:"uint256"},{internalType:"uint16",name:"_l2TxNumberInBlock",type:"uint16"},{internalType:"bytes32[]",name:"_merkleProof",type:"bytes32[]"}],name:"claimFailedDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_l2Receiver",type:"address"},{internalType:"address",name:"_l1Token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_l2TxGasLimit",type:"uint256"},{internalType:"uint256",name:"_l2TxGasPerPubdataByte",type:"uint256"}],name:"deposit",outputs:[{internalType:"bytes32",name:"txHash",type:"bytes32"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"_l2BlockNumber",type:"uint256"},{internalType:"uint256",name:"_l2MessageIndex",type:"uint256"},{internalType:"uint16",name:"_l2TxNumberInBlock",type:"uint16"},{internalType:"bytes",name:"_message",type:"bytes"},{internalType:"bytes32[]",name:"_merkleProof",type:"bytes32[]"}],name:"finalizeWithdrawal",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_l2BlockNumber",type:"uint256"},{internalType:"uint256",name:"_l2MessageIndex",type:"uint256"}],name:"isWithdrawalFinalized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_l1Token",type:"address"}],name:"l2TokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"}],ms={abi:ds},fs=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"l1Sender",type:"address"},{indexed:!0,internalType:"address",name:"l2Receiver",type:"address"},{indexed:!0,internalType:"address",name:"l2Token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"FinalizeDeposit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"l2Sender",type:"address"},{indexed:!0,internalType:"address",name:"l1Receiver",type:"address"},{indexed:!0,internalType:"address",name:"l2Token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"WithdrawalInitiated",type:"event"},{inputs:[{internalType:"address",name:"_l1Sender",type:"address"},{internalType:"address",name:"_l2Receiver",type:"address"},{internalType:"address",name:"_l1Token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"finalizeDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"l1Bridge",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_l2Token",type:"address"}],name:"l1TokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_l1Token",type:"address"}],name:"l2TokenAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_l1Receiver",type:"address"},{internalType:"address",name:"_l2Token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"}],hs={abi:fs};var $t;function de(){return $t||($t=1,function(n){var e=Y&&Y.__createBinding||(Object.create?function(d,f,h,T){T===void 0&&(T=h);var E=Object.getOwnPropertyDescriptor(f,h);(!E||("get"in E?!f.__esModule:E.writable||E.configurable))&&(E={enumerable:!0,get:function(){return f[h]}}),Object.defineProperty(d,T,E)}:function(d,f,h,T){T===void 0&&(T=h),d[T]=f[h]}),t=Y&&Y.__exportStar||function(d,f){for(var h in d)h!=="default"&&!Object.prototype.hasOwnProperty.call(f,h)&&e(f,d,h)};Object.defineProperty(n,"__esModule",{value:!0}),n.estimateDefaultBridgeDepositL2Gas=n.isTypedDataSignatureCorrect=n.isMessageSignatureCorrect=n.getERC20BridgeCalldata=n.undoL1ToL2Alias=n.applyL1ToL2Alias=n.getL2HashFromPriorityOp=n.parseTransaction=n.hashBytecode=n.serialize=n.checkBaseCost=n.createAddress=n.create2Address=n.getDeployedContracts=n.getHashedL2ToL1Msg=n.layer1TxDefaults=n.sleep=n.isETH=n.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT=n.DEFAULT_GAS_PER_PUBDATA_LIMIT=n.MAX_BYTECODE_LEN_BYTES=n.PRIORITY_OPERATION_L2_TX_TYPE=n.EIP712_TX_TYPE=n.EIP1271_MAGIC_VALUE=n.L1_TO_L2_ALIAS_OFFSET=n.L2_ETH_TOKEN_ADDRESS=n.L1_MESSENGER_ADDRESS=n.CONTRACT_DEPLOYER_ADDRESS=n.BOOTLOADER_FORMAL_ADDRESS=n.L2_BRIDGE_ABI=n.L1_BRIDGE_ABI=n.IERC1271=n.IERC20=n.L1_MESSENGER=n.CONTRACT_DEPLOYER=n.ZKSYNC_MAIN_ABI=n.ETH_ADDRESS=void 0;const a=O,r=Le,o=Qe(),i=qe,p=Yr;t(Fn,n),n.ETH_ADDRESS="0x0000000000000000000000000000000000000000",n.ZKSYNC_MAIN_ABI=new a.utils.Interface(rs.abi),n.CONTRACT_DEPLOYER=new a.utils.Interface(ss.abi),n.L1_MESSENGER=new a.utils.Interface(us.abi),n.IERC20=new a.utils.Interface(ps.abi),n.IERC1271=new a.utils.Interface(ys.abi),n.L1_BRIDGE_ABI=new a.utils.Interface(ms.abi),n.L2_BRIDGE_ABI=new a.utils.Interface(hs.abi),n.BOOTLOADER_FORMAL_ADDRESS="0x0000000000000000000000000000000000008001",n.CONTRACT_DEPLOYER_ADDRESS="0x0000000000000000000000000000000000008006",n.L1_MESSENGER_ADDRESS="0x0000000000000000000000000000000000008008",n.L2_ETH_TOKEN_ADDRESS="0x000000000000000000000000000000000000800a",n.L1_TO_L2_ALIAS_OFFSET="0x1111000000000000000000000000000000001111",n.EIP1271_MAGIC_VALUE="0x1626ba7e",n.EIP712_TX_TYPE=113,n.PRIORITY_OPERATION_L2_TX_TYPE=255,n.MAX_BYTECODE_LEN_BYTES=(65536-1)*32,n.DEFAULT_GAS_PER_PUBDATA_LIMIT=5e4,n.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT=800;function u(d){return d.toLowerCase()==n.ETH_ADDRESS||d.toLowerCase()==n.L2_ETH_TOKEN_ADDRESS}n.isETH=u;function s(d){return new Promise(f=>setTimeout(f,d))}n.sleep=s;function l(){return{queueType:r.PriorityQueueType.Deque,opTree:r.PriorityOpTree.Full}}n.layer1TxDefaults=l;function c(d,f,h){const T=new Uint8Array([0,1,...a.ethers.utils.zeroPad(a.ethers.utils.hexlify(h),2),...a.ethers.utils.arrayify(n.L1_MESSENGER_ADDRESS),...a.ethers.utils.zeroPad(d,32),...a.ethers.utils.arrayify(a.ethers.utils.keccak256(f))]);return a.ethers.utils.keccak256(T)}n.getHashedL2ToL1Msg=c;function m(d){return d.logs.filter(T=>T.topics[0]==a.utils.id("ContractDeployed(address,bytes32,address)")&&T.address==n.CONTRACT_DEPLOYER_ADDRESS).map(T=>{const E=`0x${T.topics[1].slice(T.topics[1].length-40)}`,_=T.topics[2],I=`0x${T.topics[3].slice(T.topics[3].length-40)}`;return{sender:a.utils.getAddress(E),bytecodeHash:_,deployedAddress:a.utils.getAddress(I)}})}n.getDeployedContracts=m;function y(d,f,h,T){const E=a.ethers.utils.keccak256(a.ethers.utils.toUtf8Bytes("zksyncCreate2")),_=a.ethers.utils.keccak256(T),I=a.ethers.utils.keccak256(a.ethers.utils.concat([E,a.ethers.utils.zeroPad(d,32),h,f,_])).slice(26);return a.ethers.utils.getAddress(I)}n.create2Address=y;function b(d,f){const h=a.ethers.utils.keccak256(a.ethers.utils.toUtf8Bytes("zksyncCreate")),T=a.ethers.utils.keccak256(a.ethers.utils.concat([h,a.ethers.utils.zeroPad(d,32),a.ethers.utils.zeroPad(a.ethers.utils.hexlify(f),32)])).slice(26);return a.ethers.utils.getAddress(T)}n.createAddress=b;async function P(d,f){if(d.gt(await f))throw new Error(`The base cost of performing the priority operation is higher than the provided value parameter for the transaction: baseCost: ${d}, provided value: ${f}`)}n.checkBaseCost=P;function L(d,f){var h;if(d.customData==null&&d.type!=n.EIP712_TX_TYPE)return a.utils.serializeTransaction(d,f);if(!d.chainId)throw Error("Transaction chainId isn't set");function T(q,jn){const kt=a.utils.stripZeros(a.BigNumber.from(q).toHexString());if(kt.length>32)throw new Error("invalid length for "+jn);return kt}if(!d.from)throw new Error("Explicitly providing `from` field is reqiured for EIP712 transactions");const E=d.from,_=d.customData;let I=d.maxFeePerGas||d.gasPrice||0,M=d.maxPriorityFeePerGas||I;const A=[T(d.nonce||0,"nonce"),T(M,"maxPriorityFeePerGas"),T(I,"maxFeePerGas"),T(d.gasLimit||0,"gasLimit"),d.to!=null?a.utils.getAddress(d.to):"0x",T(d.value||0,"value"),d.data||"0x"];if(f){const q=a.utils.splitSignature(f);A.push(T(q.recoveryParam,"recoveryParam")),A.push(a.utils.stripZeros(q.r)),A.push(a.utils.stripZeros(q.s))}else A.push(T(d.chainId,"chainId")),A.push("0x"),A.push("0x");if(A.push(T(d.chainId,"chainId")),A.push(a.utils.getAddress(E)),A.push(T(_.gasPerPubdata||n.DEFAULT_GAS_PER_PUBDATA_LIMIT,"gasPerPubdata")),A.push(((h=_.factoryDeps)!==null&&h!==void 0?h:[]).map(q=>a.utils.hexlify(q))),_.customSignature&&a.ethers.utils.arrayify(_.customSignature).length==0)throw new Error("Empty signatures are not supported");return A.push(_.customSignature||"0x"),_.paymasterParams?A.push([_.paymasterParams.paymaster,a.ethers.utils.hexlify(_.paymasterParams.paymasterInput)]):A.push([]),a.utils.hexConcat([[n.EIP712_TX_TYPE],a.utils.RLP.encode(A)])}n.serialize=L;function v(d){const f=a.ethers.utils.arrayify(d);if(f.length%32!=0)throw new Error("The bytecode length in bytes must be divisible by 32");if(f.length>n.MAX_BYTECODE_LEN_BYTES)throw new Error(`Bytecode can not be longer than ${n.MAX_BYTECODE_LEN_BYTES} bytes`);const h=a.ethers.utils.sha256(f),T=a.ethers.utils.arrayify(h),E=f.length/32;if(E%2==0)throw new Error("Bytecode length in 32-byte words must be odd");const _=a.ethers.utils.arrayify(E),I=a.ethers.utils.zeroPad(_,2),M=new Uint8Array([1,0]);return T.set(M,0),T.set(I,2),T}n.hashBytecode=v;function B(d){function f(A){return A==="0x"?null:a.utils.getAddress(A)}function h(A){return A==="0x"?a.BigNumber.from(0):a.BigNumber.from(A)}function T(A){if(A.length!=0){if(A.length!=2)throw new Error(`Invalid paymaster parameters, expected to have length of 2, found ${A.length}`);return{paymaster:a.utils.getAddress(A[0]),paymasterInput:a.utils.arrayify(A[1])}}}const E=a.utils.arrayify(d);if(E[0]!=n.EIP712_TX_TYPE)return a.utils.parseTransaction(E);const _=a.utils.RLP.decode(E.slice(1)),I={type:n.EIP712_TX_TYPE,nonce:h(_[0]).toNumber(),maxPriorityFeePerGas:h(_[1]),maxFeePerGas:h(_[2]),gasLimit:h(_[3]),to:f(_[4]),value:h(_[5]),data:_[6],chainId:h(_[10]),from:f(_[11]),customData:{gasPerPubdata:h(_[12]),factoryDeps:_[13],customSignature:_[14],paymasterParams:T(_[15])}},M={v:h(_[7]).toNumber(),r:_[8],s:_[9]};if((a.utils.hexlify(M.r)=="0x"||a.utils.hexlify(M.s)=="0x")&&!I.customData.customSignature)return I;if(M.v!==0&&M.v!==1&&!I.customData.customSignature)throw new Error("Failed to parse signature");return I.customData.customSignature||(I.v=M.v,I.s=M.s,I.r=M.r),I.hash=H(I,M),I}n.parseTransaction=B;function U(d,f){var h;if(!((h=d==null?void 0:d.customData)===null||h===void 0)&&h.customSignature&&d.customData.customSignature.length)return a.ethers.utils.arrayify(d.customData.customSignature);if(!f)throw new Error("No signature provided");const T=a.ethers.utils.zeroPad(a.ethers.utils.arrayify(f.r),32),E=a.ethers.utils.zeroPad(a.ethers.utils.arrayify(f.s),32),_=f.v;return new Uint8Array([...T,...E,_])}function H(d,f){const h=o.EIP712Signer.getSignedDigest(d),T=a.ethers.utils.keccak256(U(d,f));return a.ethers.utils.keccak256(a.ethers.utils.hexConcat([h,T]))}function X(d,f){let h=null;for(const T of d.logs)if(T.address.toLowerCase()==f.toLowerCase())try{const E=n.ZKSYNC_MAIN_ABI.parseLog(T);E&&E.args.txHash!=null&&(h=E.args.txHash)}catch{}if(!h)throw new Error("Failed to parse tx logs");return h}n.getL2HashFromPriorityOp=X;const N=a.BigNumber.from(2).pow(160);function ue(d){return a.ethers.utils.hexlify(a.ethers.BigNumber.from(d).add(n.L1_TO_L2_ALIAS_OFFSET).mod(N))}n.applyL1ToL2Alias=ue;function Ae(d){let f=a.ethers.BigNumber.from(d).sub(n.L1_TO_L2_ALIAS_OFFSET);return f.lt(a.BigNumber.from(0))&&(f=f.add(N)),a.ethers.utils.hexlify(f)}n.undoL1ToL2Alias=Ae;async function G(d,f){const h=i.IERC20MetadataFactory.connect(d,f),T=await h.name(),E=await h.symbol(),_=await h.decimals(),I=new p.AbiCoder,M=I.encode(["string"],[T]),A=I.encode(["string"],[E]),q=I.encode(["uint256"],[_]);return I.encode(["bytes","bytes","bytes"],[M,A,q])}async function le(d,f,h,T,E){const _=await G(d,E);return n.L2_BRIDGE_ABI.encodeFunctionData("finalizeDeposit",[f,h,d,T,_])}n.getERC20BridgeCalldata=le;function tt(d,f,h){try{return d==a.ethers.utils.recoverAddress(f,h)}catch{return!1}}async function nt(d,f,h,T){return await new a.ethers.Contract(f,n.IERC1271,d).isValidSignature(h,T)==n.EIP1271_MAGIC_VALUE}async function me(d,f,h,T){let E=!1;const _=await d.getCode(f);return E=a.ethers.utils.arrayify(_).length!=0,E?await nt(d,f,h,T):tt(f,h,T)}async function Hn(d,f,h,T){const E=a.ethers.utils.hashMessage(h);return await me(d,f,E,T)}n.isMessageSignatureCorrect=Hn;async function Gn(d,f,h,T,E,_){const I=a.ethers.utils._TypedDataEncoder.hash(h,T,E);return await me(d,f,I,_)}n.isTypedDataSignatureCorrect=Gn;async function zn(d,f,h,T,E,_,I){if(_??(_=a.ethers.Wallet.createRandom().address),h==n.ETH_ADDRESS)return await f.estimateL1ToL2Execute({contractAddress:E,gasPerPubdataByte:I,caller:_,calldata:"0x",l2Value:T});{const M=(await f.getDefaultBridgeAddresses()).erc20L1,A=(await f.getDefaultBridgeAddresses()).erc20L2,q=await le(h,_,E,T,d);return await f.estimateL1ToL2Execute({caller:ue(M),contractAddress:A,gasPerPubdataByte:I,calldata:q})}}n.estimateDefaultBridgeDepositL2Gas=zn}(st)),st}var et={};Object.defineProperty(et,"__esModule",{value:!0});et.Wallet=void 0;const bs=Qe(),Ce=de(),qt=O,Wt=Nn();class Q extends(0,Wt.AdapterL2)((0,Wt.AdapterL1)(qt.ethers.Wallet)){_providerL1(){if(this.providerL1==null)throw new Error("L1 provider missing: use `connectToL1` to specify");return this.providerL1}_providerL2(){return this.provider}_signerL1(){return this.ethWallet()}_signerL2(){return this}ethWallet(){return new qt.ethers.Wallet(this._signingKey(),this._providerL1())}async getNonce(e){return await this.getTransactionCount(e)}connect(e){return new Q(this._signingKey(),e,this.providerL1)}connectToL1(e){return new Q(this._signingKey(),this.provider,e)}static fromMnemonic(e,t,a){const r=super.fromMnemonic(e,t,a);return new Q(r._signingKey())}static async fromEncryptedJson(e,t,a){const r=await super.fromEncryptedJson(e,t,a);return new Q(r._signingKey())}static fromEncryptedJsonSync(e,t){const a=super.fromEncryptedJsonSync(e,t);return new Q(a._signingKey())}static createRandom(e){const t=super.createRandom(e);return new Q(t._signingKey())}constructor(e,t,a){if(super(e,t),this.provider!=null){const r=this.getChainId();this.eip712=new bs.EIP712Signer(this,r)}this.providerL1=a}async populateTransaction(e){var t,a;return e.type==null&&e.customData==null&&(e.type=0),e=await super.populateTransaction(e),e.customData==null&&e.type!=Ce.EIP712_TX_TYPE||(e.type=Ce.EIP712_TX_TYPE,(t=e.value)!==null&&t!==void 0||(e.value=0),(a=e.data)!==null&&a!==void 0||(e.data="0x"),e.customData=this._fillCustomData(e.customData),e.gasPrice=await this.provider.getGasPrice()),e}async signTransaction(e){var t;if(e.customData==null&&e.type!=Ce.EIP712_TX_TYPE)return e.type==2&&e.maxFeePerGas==null&&(e.maxFeePerGas=await this.provider.getGasPrice()),await super.signTransaction(e);if((t=e.from)!==null&&t!==void 0||(e.from=this.address),e.from.toLowerCase()!=this.address.toLowerCase())throw new Error("Transaction `from` address mismatch");return e.customData.customSignature=await this.eip712.sign(e),(0,Ce.serialize)(e)}async sendTransaction(e){return await super.sendTransaction(e)}}et.Wallet=Q;var ye={};Object.defineProperty(ye,"__esModule",{value:!0});ye.Web3Provider=ye.Provider=void 0;const x=O;var F=x.providers.Formatter;const Ts=Zr,pe=qe,he=Le,R=de(),gs=Qe();let D=null;class Ee extends x.ethers.providers.JsonRpcProvider{async getTransactionReceipt(e){await this.getNetwork(),e=await e;const t={transactionHash:this.formatter.hash(e,!0)};return(0,Ts.poll)(async()=>{const a=await this.perform("getTransactionReceipt",t);if(a==null)return this._emitted["t:"+e]==null?null:void 0;if(a.blockNumber==null&&a.status!=null&&x.BigNumber.from(a.status).isZero())return{...this.formatter.receipt({...a,confirmations:1,blockNumber:0,blockHash:x.ethers.constants.HashZero}),blockNumber:null,blockHash:null,l1BatchNumber:null,l1BatchTxIndex:null};if(a.blockHash!=null){const r=this.formatter.receipt(a);if(r.blockNumber==null)r.confirmations=0;else if(r.confirmations==null){let i=await this._getInternalBlockNumber(100+2*this.pollingInterval)-r.blockNumber+1;i<=0&&(i=1),r.confirmations=i}return r}},{oncePoll:this})}async getBlock(e){return this._getBlock(e,!1)}async getBlockWithTransactions(e){return this._getBlock(e,!0)}static getFormatter(){if(D==null){D=new F;const e=D.number.bind(D),t=D.boolean.bind(D),a=D.hash.bind(D),r=D.address.bind(D);D.formats.receiptLog.l1BatchNumber=F.allowNull(e),D.formats.l2Tol1Log={blockNumber:e,blockHash:a,l1BatchNumber:F.allowNull(e),transactionIndex:e,shardId:e,isService:t,sender:r,key:a,value:a,transactionHash:a,logIndex:e},D.formats.receipt.l1BatchNumber=F.allowNull(e),D.formats.receipt.l1BatchTxIndex=F.allowNull(e),D.formats.receipt.l2ToL1Logs=F.arrayOf(o=>F.check(D.formats.l2Tol1Log,o)),D.formats.block.l1BatchNumber=F.allowNull(e),D.formats.block.l1BatchTimestamp=F.allowNull(e),D.formats.blockWithTransactions.l1BatchNumber=F.allowNull(e),D.formats.blockWithTransactions.l1BatchTimestamp=F.allowNull(e),D.formats.transaction.l1BatchNumber=F.allowNull(e),D.formats.transaction.l1BatchTxIndex=F.allowNull(e),D.formats.filterLog.l1BatchNumber=F.allowNull(e)}return D}async getBalance(e,t,a){const r=this.formatter.blockTag(t);if(a==null||(0,R.isETH)(a))return await super.getBalance(e,r);try{return await pe.IERC20MetadataFactory.connect(a,this).balanceOf(e,{blockTag:r})}catch{return x.BigNumber.from(0)}}async l2TokenAddress(e){if(e==R.ETH_ADDRESS)return R.ETH_ADDRESS;{const t=(await this.getDefaultBridgeAddresses()).erc20L2;return await pe.IL2BridgeFactory.connect(t,this).l2TokenAddress(e)}}async l1TokenAddress(e){if(e==R.ETH_ADDRESS)return R.ETH_ADDRESS;{const t=(await this.getDefaultBridgeAddresses()).erc20L2;return await pe.IL2BridgeFactory.connect(t,this).l1TokenAddress(e)}}static hexlifyTransaction(e,t){var a;const r=x.ethers.providers.JsonRpcProvider.hexlifyTransaction(e,{...t,customData:!0,from:!0});return e.customData==null||(r.eip712Meta={gasPerPubdata:x.utils.hexValue((a=e.customData.gasPerPubdata)!==null&&a!==void 0?a:0)},e.type=R.EIP712_TX_TYPE,e.customData.factoryDeps&&(r.eip712Meta.factoryDeps=e.customData.factoryDeps.map(o=>Array.from(x.utils.arrayify(o)))),e.customData.paymasterParams&&(r.eip712Meta.paymasterParams={paymaster:x.utils.hexlify(e.customData.paymasterParams.paymaster),paymasterInput:Array.from(x.utils.arrayify(e.customData.paymasterParams.paymasterInput))})),r}async estimateGas(e){await this.getNetwork();const t=await x.utils.resolveProperties({transaction:this._getTransactionRequest(e)});e.customData!=null&&(t.transaction.customData=e.customData);const a=await this.perform("estimateGas",t);try{return x.BigNumber.from(a)}catch{throw new Error(`bad result from backend (estimateGas): ${a}`)}}async estimateGasL1(e){await this.getNetwork();const t=await x.utils.resolveProperties({transaction:this._getTransactionRequest(e)});e.customData!=null&&(t.transaction.customData=e.customData);const a=await this.send("zks_estimateGasL1ToL2",[Ee.hexlifyTransaction(t.transaction,{from:!0})]);try{return x.BigNumber.from(a)}catch{throw new Error(`bad result from backend (zks_estimateGasL1ToL2): ${a}`)}}async getGasPrice(e){const t=e?[e]:[],a=await this.send("eth_gasPrice",t);return x.BigNumber.from(a)}constructor(e,t){super(e,t),this.pollingInterval=500;const a=this.formatter.blockTag.bind(this.formatter);this.formatter.blockTag=r=>r=="committed"||r=="finalized"?r:a(r),this.contractAddresses={},this.formatter.transaction=R.parseTransaction}async getMessageProof(e,t,a,r){return await this.send("zks_getL2ToL1MsgProof",[x.BigNumber.from(e).toNumber(),t,x.ethers.utils.hexlify(a),r])}async getLogProof(e,t){return await this.send("zks_getL2ToL1LogProof",[x.ethers.utils.hexlify(e),t])}async getL1BatchBlockRange(e){const t=await this.send("zks_getL1BatchBlockRange",[e]);return t==null?null:[parseInt(t[0],16),parseInt(t[1],16)]}async getMainContractAddress(){return this.contractAddresses.mainContract||(this.contractAddresses.mainContract=await this.send("zks_getMainContract",[])),this.contractAddresses.mainContract}async getTestnetPaymasterAddress(){return await this.send("zks_getTestnetPaymaster",[])}async getDefaultBridgeAddresses(){if(!this.contractAddresses.erc20BridgeL1){let e=await this.send("zks_getBridgeContracts",[]);this.contractAddresses.erc20BridgeL1=e.l1Erc20DefaultBridge,this.contractAddresses.erc20BridgeL2=e.l2Erc20DefaultBridge}return{erc20L1:this.contractAddresses.erc20BridgeL1,erc20L2:this.contractAddresses.erc20BridgeL2}}async getConfirmedTokens(e=0,t=255){return(await this.send("zks_getConfirmedTokens",[e,t])).map(r=>({address:r.l2Address,...r}))}async getTokenPrice(e){return await this.send("zks_getTokenPrice",[e])}async getAllAccountBalances(e){let t=await this.send("zks_getAllAccountBalances",[e]);for(let a in t)t[a]=x.BigNumber.from(t[a]);return t}async l1ChainId(){const e=await this.send("zks_L1ChainId",[]);return x.BigNumber.from(e).toNumber()}async getL1BatchNumber(){const e=await this.send("zks_L1BatchNumber",[]);return x.BigNumber.from(e).toNumber()}async getL1BatchDetails(e){return await this.send("zks_getL1BatchDetails",[e])}async getBlockDetails(e){return await this.send("zks_getBlockDetails",[e])}async getTransactionDetails(e){return await this.send("zks_getTransactionDetails",[e])}async getWithdrawTx(e){var t,a,r,o;const{...i}=e;if(i.to==null&&i.from==null)throw new Error("withdrawal target address is undefined");if((t=i.to)!==null&&t!==void 0||(i.to=i.from),(a=i.overrides)!==null&&a!==void 0||(i.overrides={}),(r=(o=i.overrides).from)!==null&&r!==void 0||(o.from=i.from),(0,R.isETH)(i.token)){if(i.overrides.value||(i.overrides.value=i.amount),!x.BigNumber.from(i.overrides.value).eq(i.amount))throw new Error("The tx.value is not equal to the value withdrawn");return pe.IEthTokenFactory.connect(R.L2_ETH_TOKEN_ADDRESS,this).populateTransaction.withdraw(i.to,i.overrides)}if(i.bridgeAddress==null){const u=await this.getDefaultBridgeAddresses();i.bridgeAddress=u.erc20L2}return pe.IL2BridgeFactory.connect(i.bridgeAddress,this).populateTransaction.withdraw(i.to,i.token,i.amount,i.overrides)}async estimateGasWithdraw(e){const t=await this.getWithdrawTx(e);return await this.estimateGas(t)}async getTransferTx(e){var t,a,r;const{...o}=e;return(t=o.overrides)!==null&&t!==void 0||(o.overrides={}),(a=(r=o.overrides).from)!==null&&a!==void 0||(r.from=o.from),o.token==null||o.token==R.ETH_ADDRESS?{...await x.ethers.utils.resolveProperties(o.overrides),to:o.to,value:o.amount}:await pe.IERC20MetadataFactory.connect(o.token,this).populateTransaction.transfer(o.to,o.amount,o.overrides)}async estimateGasTransfer(e){const t=await this.getTransferTx(e);return await this.estimateGas(t)}static getDefaultProvider(){return new Ee({}.ZKSYNC_WEB3_API_URL||"http://localhost:3050")}async newFilter(e){e=await e;const t=await this.send("eth_newFilter",[this._prepareFilter(e)]);return x.BigNumber.from(t)}async newBlockFilter(){const e=await this.send("eth_newBlockFilter",[]);return x.BigNumber.from(e)}async newPendingTransactionsFilter(){const e=await this.send("eth_newPendingTransactionFilter",[]);return x.BigNumber.from(e)}async getFilterChanges(e){const t=await this.send("eth_getFilterChanges",[e.toHexString()]);return typeof t[0]=="string"?t:this._parseLogs(t)}async getLogs(e={}){e=await e;const t=await this.send("eth_getLogs",[this._prepareFilter(e)]);return this._parseLogs(t)}_parseLogs(e){return F.arrayOf(this.formatter.filterLog.bind(this.formatter))(e)}_prepareFilter(e){return{...e,fromBlock:e.fromBlock==null?null:this.formatter.blockTag(e.fromBlock),toBlock:e.fromBlock==null?null:this.formatter.blockTag(e.toBlock)}}_wrapTransaction(e,t){const a=super._wrapTransaction(e,t);return a.waitFinalize=async()=>{const r=await a.wait();for(;;){const o=await this.getBlock("finalized");if(r.blockNumber<=o.number)return await this.getTransactionReceipt(r.transactionHash);await(0,R.sleep)(this.pollingInterval)}},a}async getTransactionStatus(e){const t=await this.getTransaction(e);if(t==null)return he.TransactionStatus.NotFound;if(t.blockNumber==null)return he.TransactionStatus.Processing;const a=await this.getBlock("finalized");return t.blockNumber<=a.number?he.TransactionStatus.Finalized:he.TransactionStatus.Committed}async getTransaction(e){e=await e;const t=await super.getTransaction(e);return t?this._wrapTransaction(t,e):null}async sendTransaction(e){return await super.sendTransaction(e)}async getL2TransactionFromPriorityOp(e){const t=await e.wait(),a=(0,R.getL2HashFromPriorityOp)(t,await this.getMainContractAddress());let r=null;do r=await this.getTransactionStatus(a),await(0,R.sleep)(this.pollingInterval);while(r==he.TransactionStatus.NotFound);return await this.getTransaction(a)}async getPriorityOpResponse(e){const t={...e};return t.waitL1Commit=t.wait,t.wait=async()=>await(await this.getL2TransactionFromPriorityOp(e)).wait(),t.waitFinalize=async()=>await(await this.getL2TransactionFromPriorityOp(e)).waitFinalize(),t}async getContractAccountInfo(e){const a=await new x.Contract(R.CONTRACT_DEPLOYER_ADDRESS,R.CONTRACT_DEPLOYER,this).getAccountInfo(e);return{supportedAAVersion:a.supportedAAVersion,nonceOrdering:a.nonceOrdering}}async estimateL1ToL2Execute(e){var t,a;(t=e.gasPerPubdataByte)!==null&&t!==void 0||(e.gasPerPubdataByte=R.REQUIRED_L1_TO_L2_GAS_PER_PUBDATA_LIMIT),(a=e.caller)!==null&&a!==void 0||(e.caller=x.ethers.Wallet.createRandom().address);const r={gasPerPubdataByte:e.gasPerPubdataByte};return e.factoryDeps&&Object.assign(r,{factoryDeps:e.factoryDeps}),await this.estimateGasL1({from:e.caller,data:e.calldata,to:e.contractAddress,value:e.l2Value,customData:r})}}ye.Provider=Ee;class ws extends Ee{constructor(e,t){if(e==null)throw new Error("missing provider");if(!e.request)throw new Error("provider must implement eip-1193");let a=e.host||e.path||(e.isMetaMask?"metamask":"eip-1193:");super(a,t),this.provider=e}async send(e,t){return t??(t=[]),e=="eth_sign"&&(this.provider.isMetaMask||this.provider.isStatus)&&(e="personal_sign",t=[t[1],t[0]]),await this.provider.request({method:e,params:t})}getSigner(e){return gs.Signer.from(super.getSigner(e))}async estimateGas(e){const t=await super.estimateGas(e),a=x.BigNumber.from(21e3),r=e.customData!=null||e.type==R.EIP712_TX_TYPE;return t.gt(a)||r?t:a}}ye.Web3Provider=ws;var On={};(function(n){Object.defineProperty(n,"__esModule",{value:!0}),n.ContractFactory=n.Contract=void 0;const e=O,t=de(),a=Le;var r=O;Object.defineProperty(n,"Contract",{enumerable:!0,get:function(){return r.Contract}});class o extends e.ethers.ContractFactory{constructor(p,u,s,l){super(p,u,s),this.deploymentType=l||"create"}encodeCalldata(p,u,s){if(this.deploymentType=="create")return t.CONTRACT_DEPLOYER.encodeFunctionData("create",[p,u,s]);if(this.deploymentType=="createAccount")return t.CONTRACT_DEPLOYER.encodeFunctionData("createAccount",[p,u,s,a.AccountAbstractionVersion.Version1]);throw new Error(`Unsupported deployment type ${this.deploymentType}`)}getDeployTransaction(...p){var u,s,l,c,m;let y="0x0000000000000000000000000000000000000000000000000000000000000000";const b=super.getDeployTransaction(...p);this.interface.deploy.inputs.length+1==p.length&&p.pop();const P=(0,t.hashBytecode)(this.bytecode),L=e.utils.arrayify(this.interface.encodeDeploy(p)),v=this.encodeCalldata(y,P,L);return b.type=t.EIP712_TX_TYPE,b.to=t.CONTRACT_DEPLOYER_ADDRESS,b.data=v,(u=b.customData)!==null&&u!==void 0||(b.customData={}),(s=(c=b.customData).factoryDeps)!==null&&s!==void 0||(c.factoryDeps=[]),(l=(m=b.customData).gasPerPubdata)!==null&&l!==void 0||(m.gasPerPubdata=t.DEFAULT_GAS_PER_PUBDATA_LIMIT),b.customData.factoryDeps.includes(this.bytecode)||b.customData.factoryDeps.push(this.bytecode),b}async deploy(...p){const u=await super.deploy(...p),s=await u.deployTransaction.wait(),l=(0,t.getDeployedContracts)(s).map(m=>m.deployedAddress),c=new e.ethers.Contract(l[l.length-1],u.interface,u.signer);return e.utils.defineReadOnly(c,"deployTransaction",u.deployTransaction),c}}n.ContractFactory=o})(On);(function(n){var e=Y&&Y.__createBinding||(Object.create?function(u,s,l,c){c===void 0&&(c=l);var m=Object.getOwnPropertyDescriptor(s,l);(!m||("get"in m?!s.__esModule:m.writable||m.configurable))&&(m={enumerable:!0,get:function(){return s[l]}}),Object.defineProperty(u,c,m)}:function(u,s,l,c){c===void 0&&(c=l),u[c]=s[l]}),t=Y&&Y.__setModuleDefault||(Object.create?function(u,s){Object.defineProperty(u,"default",{enumerable:!0,value:s})}:function(u,s){u.default=s}),a=Y&&Y.__importStar||function(u){if(u&&u.__esModule)return u;var s={};if(u!=null)for(var l in u)l!=="default"&&Object.prototype.hasOwnProperty.call(u,l)&&e(s,u,l);return t(s,u),s};Object.defineProperty(n,"__esModule",{value:!0}),n.Contract=n.ContractFactory=n.Provider=n.Web3Provider=n.Wallet=n.L1Signer=n.Signer=n.EIP712Signer=n.types=n.utils=void 0,n.utils=a(de()),n.types=a(Le);var r=Qe();Object.defineProperty(n,"EIP712Signer",{enumerable:!0,get:function(){return r.EIP712Signer}}),Object.defineProperty(n,"Signer",{enumerable:!0,get:function(){return r.Signer}}),Object.defineProperty(n,"L1Signer",{enumerable:!0,get:function(){return r.L1Signer}});var o=et;Object.defineProperty(n,"Wallet",{enumerable:!0,get:function(){return o.Wallet}});var i=ye;Object.defineProperty(n,"Web3Provider",{enumerable:!0,get:function(){return i.Web3Provider}}),Object.defineProperty(n,"Provider",{enumerable:!0,get:function(){return i.Provider}});var p=On;Object.defineProperty(n,"ContractFactory",{enumerable:!0,get:function(){return p.ContractFactory}}),Object.defineProperty(n,"Contract",{enumerable:!0,get:function(){return p.Contract}})})(Mn);const _s=n=>{let e=null;switch(n){case 1:e=new Z("https://eth-mainnet.g.alchemy.com/v2/bWhXs3Z1XxeReXb6YAQW4N6uXHJvQ1Bm");break;case 5:e=new Z("https://eth-goerli.g.alchemy.com/v2/fZ4bHjl2AL7bfyIQf4h2EkGjPq0jzjU8");break;case 280:e=new Mn.Provider("https://zksync2-testnet.zksync.dev");break;case 137:e=new Z("https://polygon-mainnet.infura.io/v3/28290a5803ce453598f17d2139e9fb52");break;case 80001:e=new Z("https://polygon-mumbai.infura.io/v3/28290a5803ce453598f17d2139e9fb52");break;default:throw new Error("provider is not defined")}return e};class As{constructor(e,t,a){C(this,"address");C(this,"abi");C(this,"chainId");C(this,"contract");C(this,"provider");this.address=Lt(e),typeof t=="string"&&(t=JSON.parse(t)),this.abi=t,this.chainId=a,this.provider=_s(a),this.contract=new Pe(this.address,this.abi,this.provider)}getContractAddress(){return this.contract.address}getConfig(){return{address:this.address,abi:this.abi,chainId:this.chainId}}getChainId(){return this.chainId}async waitForTransaction(e){let t=1;return(this.chainId==di.id||this.chainId==mi.id||this.chainId==ui.id||this.chainId==hr.id)&&(t=3),await br({chainId:this.chainId,confirmations:t,hash:Lt(e),timeout:60*1e3})}async checkNetwork(){var t;((t=Tr().chain)==null?void 0:t.id)!=this.chainId&&await gr({chainId:this.chainId})}}class Yt{constructor(e){C(this,"txHash");C(this,"chainId");C(this,"blockNumber");C(this,"from");C(this,"to");C(this,"gasPrice");C(this,"gasLimit");C(this,"gasUsed");C(this,"value");C(this,"status");C(this,"methodName");C(this,"methodHash");C(this,"methodSignature");C(this,"logs");C(this,"transactionResponse");C(this,"transactionReceipt");C(this,"transactedAt");this.txHash=e.txHash,this.chainId=e.chainId.toString(),this.blockNumber=e.blockNumber,this.from=e.from,this.to=e.to,this.gasPrice=e.gasPrice,this.gasLimit=e.gasLimit,this.gasUsed=e.gasUsed,this.value=e.value,this.status=e.status,this.methodName=e.methodName,this.methodHash=e.methodHash,this.methodSignature=e.methodSignature,this.logs=e.logs,this.transactionResponse=e.transactionResponse,this.transactionReceipt=e.transactionReceipt,this.transactedAt=e.transactedAt}}class Un extends wr{async uploadTxHash(e,t){const a=this.gateway+"/transaction/new",r={tx_hash:e,chain_id:t},o=await At.post(a,r);return this.checkResponse(o),new Yt(o.data.data)}async pushTxHash(e,t){const a=this.gateway+"/transaction/push/"+t+"/"+e,r=await At.get(a);return this.checkResponse(r),new Yt(r.data.data)}static async uploadTxHashToApi(e,t){return await new Un().uploadTxHash(e,t)}}export{As as C,Un as T};
